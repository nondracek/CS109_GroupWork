{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# CS 109A/STAT 121A/AC 209A/CSCI E-109A: Homework 3\n",
    "# Multiple Linear Regression, Subset Selection, Cross Validation\n",
    "\n",
    "**Harvard University**<br/>\n",
    "**Fall 2017**<br/>\n",
    "**Instructors**: Pavlos Protopapas, Kevin Rader, Rahul Dave, Margo Levine\n",
    "\n",
    "---\n",
    "\n",
    "### INSTRUCTIONS\n",
    "\n",
    "- To submit your assignment follow the instructions given in canvas.\n",
    "- Restart the kernel and run the whole notebook again before you submit. \n",
    "- Do not include your name(s) in the notebook if you are submitting as a group. \n",
    "- If you submit individually and you have worked with someone, please include the name of your [one] partner below. \n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "Your partner's name (if you submit separately):\n",
    "\n",
    "Enrollment Status (109A, 121A, 209A, or E109A): 109A"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Import libraries:"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 78,
=======
   "execution_count": 374,
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.metrics import r2_score\n",
    "import statsmodels.api as sm\n",
    "from statsmodels.api import OLS\n",
    "from statsmodels.graphics import utils\n",
    "from statsmodels.tools import add_constant\n",
    "from sklearn.preprocessing import PolynomialFeatures\n",
    "from sklearn.linear_model import Ridge\n",
    "from sklearn.linear_model import Lasso\n",
    "from sklearn.linear_model import RidgeCV\n",
    "from sklearn.linear_model import LassoCV\n",
<<<<<<< HEAD
    "from sklearn.linear_model import LinearRegression\n",
=======
    "from sklearn.model_selection import KFold\n",
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
    "%matplotlib inline\n",
    "\n",
    "import seaborn as sns\n",
    "pd.set_option('display.width', 1500)\n",
    "pd.set_option('display.max_columns', 100)\n",
    "\n",
    "sns.set_context('poster')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Forecasting Bike Sharing Usage\n",
    "\n",
    "In this homework, we will focus on multiple linear regression and will explore techniques for subset selection. The specific task is to build a regression model for a bike share system that can predict the total number of bike rentals in a given day, based on attributes about the day. Such a demand forecasting model would be useful in planning the number of bikes that need to be available in the system on any given day, and also in monitoring traffic in the city. The data for this problem was collected from the Capital Bikeshare program in Washington D.C. over two years.   \n",
    "\n",
    "The data set is provided in the files `Bikeshare_train.csv` and `Bikeshare_test.csv`, as separate training and test sets. Each row in these files contains 10 attributes describing a day and its weather:\n",
    "- season (1 = spring, 2 = summer, 3 = fall, 4 = winter)\n",
    "- month (1 through 12, with 1 denoting Jan)\n",
    "- holiday (1 = the day is a holiday, 0 = otherwise)\n",
    "- day_of_week (0 through 6, with 0 denoting Sunday)\n",
    "- workingday (1 = the day is neither a holiday or weekend, 0 = otherwise)\n",
    "- weather \n",
    "    - 1: Clear, Few clouds, Partly cloudy, Partly cloudy\n",
    "    - 2: Mist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist\n",
    "    - 3: Light Snow, Light Rain + Thunderstorm + Scattered clouds, Light Rain + Scattered clouds\n",
    "    - 4: Heavy Rain + Ice Pallets + Thunderstorm + Mist, Snow + Fog \n",
    "- temp (temperature in Celsius)\n",
    "- atemp (apparent temperature, or relative outdoor temperature, in Celsius)\n",
    "- humidity (relative humidity)\n",
    "- windspeed (wind speed)\n",
    "\n",
    "and the last column 'count' contains the response variable, i.e. total number of bike rentals on the day.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part (a): Data Exploration & Preprocessing\n",
    "\n",
    "As a first step, identify important characteristics of the data using suitable visualizations when necessary. Some of the questions you may ask include (but are not limited to):\n",
    "\n",
    "- How does the number of bike rentals vary between weekdays and weekends? \n",
    "- How about bike rentals on holidays?\n",
    "- What effect does the season have on the bike rentals on a given day?\n",
    "- Is the number of bike rentals lower than average when there is rain or snow?\n",
    "- How does temperature effect bike rentals?\n",
    "- Do any of the numeric attributes have a clear non-linear dependence with number of the bike rentals?\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 3,
=======
   "execution_count": 375,
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
   "metadata": {
    "collapsed": true,
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "train = pd.read_csv('Bikeshare_train.csv', index_col=0)\n",
    "test = pd.read_csv('Bikeshare_test.csv', index_col=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 376,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Average workday count: 4665.896396396396 \n",
      "Average non-workday count: 4461.073394495413 \n",
      "\n",
      "Average holiday count: 4199.181818181818 \n",
      "Average non-holiday count: 4612.171875 \n",
      "\n",
      "Average spring count: 2639.722222222222 \n",
      "Average summer count: 4985.7441860465115\n",
      "Average fall count: 5680.738636363636 \n",
      "Average winter count: 4745.2588235294115\n"
     ]
    }
   ],
   "source": [
    "workDay = train[(train['workingday'] == 1.0)]['count'].mean()\n",
    "nonWork = train[(train['workingday'] == 0.0)]['count'].mean()\n",
    "\n",
    "holiday = train[(train['holiday'] == 1.0)]['count'].mean()\n",
    "nonholiday = train[(train['holiday'] == 0.0)]['count'].mean()\n",
    "\n",
    "spring = train[(train['season'] == 1.0)]['count'].mean()\n",
    "summer = train[(train['season'] == 2.0)]['count'].mean()\n",
    "fall = train[(train['season'] == 3.0)]['count'].mean()\n",
    "winter = train[(train['season'] == 4.0)]['count'].mean()\n",
    "\n",
    "print('Average workday count:', workDay, '\\nAverage non-workday count:', nonWork, '\\n')\n",
    "print('Average holiday count:', holiday, '\\nAverage non-holiday count:', nonholiday, '\\n')\n",
    "print('Average spring count:', spring, '\\nAverage summer count:', summer)\n",
    "print('Average fall count:', fall, '\\nAverage winter count:', winter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 377,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA00AAAIjCAYAAADfivCyAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAAPYQAAD2EBqD+naQAAIABJREFUeJzs3Xl8DWf///H3ScgikcSeBCVI7UutRSIRVC2t0JZaE2tr\nLXVT7lpSdaNaLe4qpZpQdWurSm9a6y0RSoraaYval8RSIkgsme8f/Tk/p4nB6dETvJ6Px3k8eq65\nZuYzZ0adt2vmOhbDMAwBAAAAALLl4uwCAAAAACAnIzQBAAAAgAlCEwAAAACYIDQBAAAAgAlCEwAA\nAACYIDQBAAAAgAlCEwAAAACYIDQBAAAAgAlCEwAAAACYIDQBeKxYLBbFxMRY38fExMhisejs2bPO\nK+oRcPjwYVksFr333nvOLuW+3Dr/j7v4+HhZLBYtXLjQtF9cXJwsFosOHz789xR2D6Kjo1WyZEln\nlwHgEUdoAvBQu/Ul7vZX4cKF1bBhQ33//ffOLk/S3b+Q9uvXjy/uAADkYLmcXQAAOMKYMWMUFBQk\nwzCUnJysuLg4NW/eXP/973/VsmVLa7+rV68qVy7+1wfYo3Pnznr55Zfl7u7u7FIA4G/FNwcAj4Rm\nzZqpZs2a1vfdu3dXkSJF9J///McmNHl4eDijPCBHunHjhjIzM++5v6urq1xdXR9gRQCQM3F7HoBH\nkp+fnzw9PbOMKv35mabsHDlyRGXKlFGlSpWUnJxsbU9KStKzzz4rX19f5cmTR2FhYdqwYcODKF+r\nVq1SSEiI/Pz85O3trbJly+qf//yndfm1a9c0atQo1ahRQ76+vvLy8lJoaKjWrl2bZVvnzp1T586d\n5ePjIz8/P0VFRWnHjh2yWCyKi4uz6fvzzz/rxRdfVP78+eXh4aGaNWvq22+/va/aP/jgA5UoUUKe\nnp4KCwvT7t27bZbv3LlT0dHRKlWqlDw8POTv769u3brp3LlzNv0uXbqkgQMHqmTJknJ3d1fhwoXV\npEkT/fTTTzb97vW8rF+/XrVq1ZKHh4dKly6tjz/++L6O66uvvlKNGjXk6empggULqlOnTjpx4oRN\nn+joaHl7e+vEiROKjIyUt7e3ChUqpH/84x+6efOm6fZff/11FShQQIZhWNv69+8vi8WiqVOnWtuS\nk5NlsVg0ffp0a1tKSor1Hwo8PDxUtWpVzZkzx2b7tz93NnnyZJUuXVru7u7au3dvtvVkZGSoZcuW\n8vX11Q8//CAp+2eaSpYsqZYtW2r9+vWqXbu2PDw8VKpUKc2dOzfLNnfu3KmwsDB5enqqWLFiGjt2\nrGJjY+/5OanFixerUqVK8vDwUKVKlfTNN99k2++9995TvXr1VKBAAXl6eqpGjRpZbo8NCwtT1apV\ns12/bNmyatq06V3rAfD4YKQJwCPh4sWLOnv2rAzDUEpKiv79738rLS1NnTp1uq/tHDx4UBEREcqf\nP79WrVqlggULSpL+97//qVmzZqpRo4ZGjx4tFxcXxcbGKiIiQomJiapdu7bDjmXPnj1q2bKlqlSp\nojFjxsjd3V0HDhywCQKpqan65JNP1L59e/Xs2VOXLl3S7Nmz1bRpU/3444+qVq2aJCkzM1PPPfec\nfvzxR/Xu3VvlypXTkiVLFBUVle1+69evr6JFi2rYsGHy8vLSl19+qcjISH399ddq3br1XWufO3eu\nLl26pL59+yo9PV1TpkxRRESEdu3apSJFikj6IxD+9ttv6tq1q/z9/bVnzx7NnDlTe/bs0aZNm6zP\nd7366qtauHCh+vXrpwoVKujcuXNav3699u3bp+rVq0u69/Oya9cuPfPMMypUqJBiYmJ048YNjR49\n2lrT3cTFxalr166qVauWxo8fr+TkZE2ZMkUbNmzQtm3b5OfnZ+178+ZNNW3aVHXq1NF7772n1atX\na9KkSSpdurR69+59x32Ehobqgw8+0J49e1SpUiVJUmJiolxcXJSYmKgBAwZY2ySpQYMGkv645TQ8\nPFwHDhxQv379FBQUpK+++krR0dG6cOGCXnvtNZv9xMbGKj09Xb169ZK7u7vy58+vCxcu2PS5evWq\nWrVqpS1btmj16tWqVauW6edz4MABvfjii+revbuioqL06aefKjo6WjVq1FDFihUlSSdOnFDDhg1l\nsVg0fPhweXl56ZNPPrnnW/1WrlypF154QRUqVND48eN17tw5de3aVcWKFcvSd8qUKXr++efVsWNH\nXbt2TQsWLNBLL72kpUuXqkWLFpL+uNWwZ8+e2r17t/XzlqTNmzfr119/1YgRI+6pLgCPCQMAHmKx\nsbGGpCwvd3d3Iy4uLkt/Scbo0aOt70ePHm1IMs6cOWPs27fPCAwMNGrVqmWcP3/e2iczM9MIDg42\nmjZtamRmZlrbr1y5YgQFBRlNmjQxrXHt2rWGJOOrr77Kdnnfvn2N2/93/MEHH1hrupMbN24YGRkZ\nNm2///67UaRIEaNbt27Wtq+//tqQZEyePNnadvPmTSMiIsKQZMTGxlrbGzVqZFSuXNlIT0+3OfZ6\n9eoZwcHBpsd46NAhQ5Lh6elpHD9+3NqelJRkSDIGDRpkbbty5UqW9f/zn/8Ykox169ZZ23x9fY2+\nffvecZ/3c14iIyMNDw8P48iRI9a2vXv3Gq6ursbd/iq8du2aUbhwYaNSpUrG1atXre1Lly41JBmj\nRo2ytkVFRRmSjDFjxths46mnnjJq1Khhup+UlBRDkvHRRx8ZhmEYFy5cMFxcXIyXXnrJKFKkiLXf\ngAEDjPz581uPefLkyYYkY968eTY1161b1/D29jZSU1MNw/j/58jHx8dISUmx2fft1+ilS5eMsLAw\no2DBgsa2bdts+t3683bo0CFrW4kSJbKcu5SUFMPd3d0YPHiwta1///6GxWKx2ea5c+eM/PnzZ9lm\ndqpVq2YEBAQYFy5csLatXLnSkGSUKFHCpu+fr7Fr164ZlSpVMiIiIqxtFy5cMDw8PIw33njDpu+A\nAQMMLy8vIy0tzbQeAI8Xbs8D8EiYNm2aVq1apVWrVmnevHlq2LChevTooUWLFt3T+rt371ZYWJhK\nliyp1atXK1++fNZl27dv1/79+9WhQwedO3dOZ8+e1dmzZ3X58mU1atRI69atu6/nQu7m1qjFkiVL\n7rhdV1dXubm5SfpjNOn8+fO6ceOGatasaXP72vLly5U7d2717NnT2ubi4qK+ffvabO/8+fP63//+\np7Zt2+rSpUvWYzx37pyaNm2q/fv3Z7kVLTuRkZEqWrSo9X3t2rVVp04dfffdd9Y2T09P63+np6fr\n7NmzevrppyXJpnY/Pz8lJSXp5MmT2e7rXs/LzZs3tWLFCkVGRuqJJ56wrl++fPl7ugVry5YtSklJ\nUZ8+fWyeiWvRooXKlSunZcuWZVnn1VdftXkfGhqq3377zXQ/hQoVUrly5bRu3TpJ0oYNG+Tq6qoh\nQ4YoOTlZ+/fvl/THSFNISIh1RO67776Tv7+/2rdvb91W7ty5NWDAAKWlpSkhIcFmPy+88IIKFSqU\nbQ0XL17UM888o59//lnx8fHWEcu7qVChgkJDQ22OpWzZsjbHvHz5ctWtW9dmm/nz51fHjh3vuv1T\np05p+/btioqKkq+vr7W9SZMmqlChQpb+t19jv//+uy5evKjQ0FCb68vX11etWrXSf/7zH+stkTdv\n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\nSdKaNWu0a9cuzZ8/XzVq1FCdOnU0d+5cJSQkaPPmzfL09JS3t7dy5colf39/+fv7y9PTM8s+LBaL\nGjRooPhv7bbMAAAgAElEQVT4eElSfHy8unbtqoyMDP3888+6fv26fvjhB4WFhUmSPvroIxUvXlwf\nfvihypUrp8jISL311luaNGmSMjMzrdsNDg7WxIkTVbZsWZUtW9bafuPGDXXq1Elr1qzR+vXrVaZM\nmTse/+TJk9W9e3d1795dZcuW1dixY1WhQgWbPhEREerUqZPKlSun8uXLa+bMmbpy5Yo19NWrV09l\ny5bVZ599Zl0nNjZWL730kry9ve/zjNiH0AQAAAA8IH8egQkICFBKSookad++fSpevLiKFy9uXV6h\nQgX5+flp375997WfsLAwa2hKSEhQRESENUht3rxZ169fV/369a37rVu3riwWi3X9+vXrKy0tTceP\nH7e21ahRI9t9DRo0SElJSVq3bp2KFi1qWte+fftUp04dm7a6devavE9OTlbPnj0VHBwsX19f+fj4\nKC0tTUePHrX26dGjh2JjY639v//+e3Xr1u0un4rjEJoAAACAByR37tw27y0Wi81ojqOEh4dr7969\n2r9/v/bu3auQkBCFh4crPj5eCQkJqlmzpvLkyXNf2/Ty8sq2vUmTJjpx4oRWrFjhiNIVFRWl7du3\na8qUKfrhhx+0fft2FShQwGbyiS5duui3337Txo0bNW/ePAUFBSk0NNQh+78XhCYAAADACcqXL69j\nx47p2LFj1ra9e/fqwoUL1lvY3NzcdPPmzbtuq3LlysqXL5/Gjh2ratWqydvbW+Hh4UpISFB8fLz1\neaZb+924caMMw7C2bdiwQXnz5lWxYsXuuq/nn39e8+fPV48ePbRgwYK7HmNSUpJN26ZNm2zeb9iw\nQQMGDFDz5s1VsWJFubu76+zZszZ9ChQooMjISMXGxiouLk5du3a9a52ORGgCAAAAnKBx48aqXLmy\nOnbsqJ9++kk//vijunTporCwMNWsWVOSVLJkSR06dEjbt2/X2bNnlZGRke22bj3X9Pnnn1sDUpUq\nVZSRkaE1a9ZYn2eSpD59+ujYsWPq37+/fv75Zy1ZskSjR4/W66+/LheXe4sHrVu31meffaauXbtq\n4cKFd+z32muv6dNPP1VsbKx+/fVXjR49Wnv27LHpExwcrM8++0z79u1TUlKSOnbsmO2zWz169NCc\nOXO0b98+RUVF3VOdjpLrb90bAAAA4CB/mr37oWOxWLRkyRL1799fDRo0kIuLi5599ln9+9//tvZ5\n4YUXtGjRIjVs2FAXLlxQbGysoqOjs91eWFiYFi9ebA1NLi4uatCggZYtW2Z9nkmSihYtqu+++05D\nhgxR1apVlT9/fnXv3l0jRoy4r/pffPFFZWZmqnPnznJxcVGbNm2y9GnXrp0OHjyooUOHKj09XS+8\n8IJ69+5tc2vf7Nmz1atXL1WvXl3FixfXuHHj9I9//CPLtho3bqyAgABVrFhRgYGB91XrX2Uxbh+X\newSlpqbK19dXFy9elI+Pj7PLAQCYedi/ATkKnwNglZ6erkOHDikoKEgeHh7OLgdOlJaWpqJFiyo2\nNjbbgHaL2TVjbzZgpAkAAABAjpWZmamzZ89q0qRJ8vPz0/PPP/+310BoAgAAAJBjHT16VEFBQSpW\nrJji4uKUK9ffH2EITQAAAAByrJIlS8rZTxQxex4AAAAAmCA0AQAAIMdz9kgDHh4P4lohNAEAACDH\nyp07tyTpypUrTq4ED4tb18qta8cReKYJAAAAOZarq6v8/PyUkpIiScqTJ48sFouTq0JOZBiGrly5\nopSUFPn5+cnV1dVh2yY0AQAAIEfz9/eXJGtwAsz4+flZrxlHITQBAAAgR7NYLAoICFDhwoV1/fp1\nZ5eDHCx37twOHWG6hdAEAACAh4Krq+sD+UIM3A0TQQAAAACACUITAAAAAJggNAEAAACACUITAAAA\nAJggNAEAAACACUITAAAAAJggNAEAAACACUITAAAAAJggNAEAAACACUITAAAAAJggNAEAAACAiRwT\nmiZMmCCLxaKBAwda2wzD0KhRoxQQECBPT081btxY+/fvd2KVAAAAAB43OSI0bd68WR9//LGqVKli\n0z5x4kRNnTpVM2bMUFJSkry8vNS0aVOlp6c7qVIAAAAAjxunh6a0tDR17NhRs2bNUr58+azthmFo\n8uTJGjFihFq1aqUqVapo7ty5OnnypBYvXuzEigEAAAA8Tpwemvr27asWLVqocePGNu2HDh3S6dOn\nbdp9fX1Vp04dbdy48Y7by8jIUGpqqs0LAAAAAOyVy5k7X7BggX766Sdt3rw5y7LTp09LkooUKWLT\nXqRIEeuy7IwfP15vvfWWYwsFgActJsbZFQAAgDtw2kjTsWPH9Nprr+nzzz+Xh4eHw7Y7fPhwXbx4\n0fo6duyYw7YNAAAA4PHjtNC0detWpaSkqHr16sqVK5dy5cqlhIQETZ06Vbly5bKOMCUnJ9usl5yc\nLH9//ztu193dXT4+PjYvAAAAALCX00JTo0aNtGvXLm3fvt36qlmzpjp27Kjt27erVKlS8vf315o1\na6zrpKamKikpSXXr1nVW2QAAAAAeM057pilv3ryqVKmSTZuXl5cKFChgbR84cKDGjh2r4OBgBQUF\naeTIkQoMDFRkZKQzSgYAAADwGHLqRBB3M3ToUF2+fFm9evXShQsXFBISouXLlzv0GSgAAAAAMGMx\nDMNwdhEPUmpqqnx9fXXx4kWebwKQczF7Hm7H9QAAD4S92cDpv9MEAAAAADkZoQkAAAAATBCaAAAA\nAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCa\nAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAA\nTBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkA\nAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAE\noQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAA\nAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCa\nAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAA\nTBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkA\nAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAE\noQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAA\nAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATBCaAAAAAMAEoQkAAAAATDg1\n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\nNAEAAACACUITAAAAAJggNAEAAACACUITAAAAAJggNAEAAACACUITAAAAAJggNAEAAACACUITAAAA\nAJggNAEAAACACUITAAAAAJjI5ewCgMdaTIyzK8gZ+BwAAEAOxkgTAAAAAJggNAEAAACACUITAAAA\nAJggNAEAAACACUITAAAAAJggNAEAAACACUITAAAAAJggNAEAAACACUITAAAAAJjI5ewC8JiKiXF2\nBQAAAMA9YaQJAAAAAEwQmgAAAADABKEJAAAAAEwQmgAAAADABKEJAAAAAEwQmgAAAADABKEJAAAA\nAEwQmgAAAADABKEJAAAAAEzkcnYBuHcxMc6uwIHiwx2ymZjweIdsB072SF3cD4cYB/0ZxKON6yQr\n/t4BHk+MNAEAAACACUITAAAAAJggNAEAAACACUITAAAAAJggNAEAAACACUITAAAAAJggNAEAAACA\nCUITAAAAAJggNAEAAACACUITAAAAAJggNAEAAACACUITAAAAAJggNAEAAACACUITAAAAAJggNAEA\nAACACUITAAAAAJggNAEAAACACUITAAAAAJggNAEAAACACUITAAAAAJggNAEAAACACUITAAAAAJgg\nNAEAAACACUITAAAAAJggNAEAAACACUITAAAAAJggNAEAAACACUITAAAAAJjI5ewCAOBBi4kPd3YJ\nAADgIcZIEwAAAACYIDQBAAAAgAlCEwAAAACYIDQBAAAAgAlCEwAAAP6vvXsPquK8/zj+OYICgoBg\nBKygJt4V8YJRxESiJGgN0capE0stXlpjg1WqJdG2Rkq8QGISNWPqNJ3atDHWOBONSRuNg+KtBBXF\nSyOISoxJQBMVEVRUeH5/ZNxfTsT17gF8v2Z2Jvs8z+757vLMyfm4e/YAsOHS0LR582bFx8erRYsW\ncjgcWr16tVO/MUYvvviiQkJC5OXlpdjYWBUWFrqoWgAAAAD3I5eGpoqKCkVERGjx4sU19r/88sta\ntGiRlixZopycHHl7eysuLk4XLly4x5UCAAAAuF+59HeahgwZoiFDhtTYZ4zRggUL9Mc//lHDhg2T\nJP3jH/9QUFCQVq9erWeeeeZelgoAAADgPlVrv9NUVFSkkpISxcbGWm1+fn7q06ePsrOzr7ldZWWl\nysrKnBYAAAAAuFW1NjSVlJRIkoKCgpzag4KCrL6azJs3T35+ftYSGhp6V+sEAAAAUL/V2tB0q2bM\n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\n2Pg/5qzannCO9kQAAAAASUVORK5CYII=\n",
      "text/plain": [
<<<<<<< HEAD
       "<matplotlib.figure.Figure at 0x115bb32e8>"
=======
       "<matplotlib.figure.Figure at 0x1188a7c50>"
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.reset_defaults()\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.hist(train[train['workingday'] == 1]['count'], color= 'red', alpha = .5, label= 'work day')\n",
    "plt.hist(train[train['workingday'] == 0 ]['count'], color= 'blue', alpha = .5, label='not work day' )\n",
    "plt.xlabel('Number of Bikes used')\n",
    "plt.ylabel('Frequency')\n",
    "plt.title('Bike Usage based on working day')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 378,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nLKWnp1vXgtzI3/72Ny1cuFBLlizR448/brPtWlh57bXXrGuFfs/Dw+OGY1+bnbh48eJ1t1+4cMFm\nBsPNzU3r16/X2rVr9dlnn2nVqlX64IMPFBERoS+//FIVKlTQ4sWLFRsbq+joaI0bN07VqlVThQoV\nNGXKFB04cMD0XK/n2jk+99xzN5x9+X3Qslffvn31zTffaNy4cWrSpIk8PDxUWFioBx54wCYY9u3b\nVx06dNDHH3+sL7/8Uq+99ppeffVVLV++XN26dSv2dSkoKCiVuourQoUKt2R/wzD+0Lil4amnnlJS\nUpLi4uLUpk0beXt7y2KxqH///kVC/ZAhQ/TRRx/pm2++UaNGjbRy5UqNHDlSTk78DhjArUVoAoAS\nuHLliiTp/PnzN+372muvydnZWSNHjpSnp6cGDhxo3XbtN/BeXl6KjIwscR0hISGSpH379l13+759\n+6x9rnFyclLXrl3VtWtX/fOf/9TkyZP1wgsvaO3atYqMjNSyZctUq1YtLV++3OZJaNdmhX577LVr\n1+rChQs2s0379++36VerVi1JUsWKFe06x2uuzf781k8//aSaNWtKks6ePavU1FS99NJLio+PN91P\nkgIDAzVy5EiNHDlSWVlZatasmf7xj3+oW7duxb4ufn5+cnNzu+4xbnRNfuu31+/3syTXu3a3Q0hI\nyHVr//HHH63bSzJWYWGhDhw4YDO7dL3xly1bppiYGM2YMcPalp+fr+zs7CJ9H3jgAfn5+WnJkiVq\n3bq1Lly4oMGDBxe7LgCwF7+aAYBiunz5sr788ktVqlTJesuSGYvFovnz5+vhhx9WTEyMzWO2mzdv\nrtq1a2v69OnXDWAnT540HTswMFBNmjTR4sWLi/xwuX37dm3evFndunWztp05c6bIGNdmUq7Nmlyb\njfjt7ENaWpo2bdpks19UVJQuX76sBQsWWNsKCwv15ptv2vSrVq2aOnfurLfeekvHjx8v8Tlek5KS\nYrP2acuWLUpLS7Oe3/XqlqSZM2favL969WqRWx6rVaumoKAg62dQ3OtSoUIFRUVFKSUlRT///LN1\n+969e7V69eqbnlOLFi1UrVo1zZs3z2bW6osvvtDevXuv+5S5W+3BBx/Uli1bbK53Xl6e5s+fr5o1\nayo8PLzYY127NrNnz7Zp//01kX79LH9/7ebMmXPdx6k7OztrwIAB+vDDD5WcnKxGjRqpcePGxa4L\n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\naOht/+Eat86hQ4dUu3Ztbd26Vc2aNbthP7Prb282cOjtee3atdO+ffts2n766Sfroq7Q0FAFBATY\nfGlVbm6lz444AAAgAElEQVSu0tLS1KZNm9taKwAAAIDb7/Llyzpx4oQmTpyo++67zzQw3SoOvT3v\nmWeeUdu2bTV58mT17dtXW7Zs0fz58zV//nxJv04/xsXF6ZVXXlFYWJhCQ0P14osvKigoSNHR0Y4s\nHQAAAMBt8L///U9dunTRPffco2XLljmkBoeGppYtW+rjjz/WhAkTlJiYqNDQUM2cOVODBg2y9hk/\nfrzy8vI0YsQIZWdnq3379lq1ahVTrQAAAEA50LlzZzlwRZEkB4cmSerRo4d69Ohxw+0Wi0WJiYlK\nTEy8jVUBAAAAwK8cuqYJAAAAuFUcPTsBx7gV153QBAAAgDvKtcdhX7hwwcGVwBGuXffiPha9OBx+\nex4AAABQmipUqCAfHx9lZWVJkipXriyLxeLgqnCrGYahCxcuKCsrSz4+PqpQoUKpjU1oAgAAwB0n\nICBAkqzBCeWHj4+P9fqXFkITAAAA7jgWi0WBgYGqVq2aLl++7OhycJtUrFixVGeYriE0AQAA4I5V\noUKFW/JDNMoXHgQBAAAAACYITQAAAABggtAEAAAAACYITQAAAABggtAEAAAAACYITQAAAABggtAE\nAAAAACYITQAAAABggtAEAAAAACYITQAAAABggtAEAAAAACYITQAAAABggtAEAAAAACYITQAAAABg\ngtAEAAAAACYITQAAAABggtAEAAAAACYITQAAAABggtAEAAAAACYITQAAAABggtAEAAAAACYITQAA\nAABggtAEAAAAACYITQAAAABggtAEAAAAACYITQAAAABggtAEAAAAACYITQAAAABggtAEAAAAACYI\nTQAAAABggtAEAAAAACYITQAAAABggtAEAAAAACYITQAAAABggtAEAAAAACYITQAAAABggtAEAAAA\nACYITQAAAABggtAEAAAAACYITQAAAABggtAEAAAAACYITQAAAABggtAEAAAAACYITQAAAABggtAE\nAAAAACYITQAAAABggtAEAAAAACYITQAAAABggtAEAAAAACYITQAAAABggtAEAAAAACYITQAAAABg\ngtAEAAAAACYcGpoSEhJksVhsXvXq1bNuNwxD8fHxCgwMlJubmyIjI5Wenu7AigEAAACUNw6faWrQ\n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\n1J49e6w+4eHhKi0tVURExL0qHQDgpghNAFDH+fj4aN68eTp58qSrS7ljLl68eNv7Hj58WP3791fr\n1q0VHBx83X6JiYkqLS1VaWmpsrOz5enpqSeffNLa7uHhodDQUHl6et52LQCA+oHQBAB1XHx8vEJD\nQzV37tzr9snMzLzmVrUFCxaoTZs21vro0aM1bNgwzZkzRyEhIQoMDNTMmTN1+fJlpaenKygoSC1b\nttSSJUuuOX5hYaH69esnHx8fRUREaOPGjU7b9+3bp6SkJPn5+SkkJESjRo3SN998Y22Pi4vTxIkT\nlZaWpmbNmikhIaHW86ipqdHMmTPVsmVLeXt7q3v37lqzZo213eFwKD8/XzNnzpTD4VBmZuZ1x8Tb\n21uhoaEKDQ1V9+7dNW3aNJWUlOjrr7+WdONbD8+dO6ekpCTFxsZat+yVlJRoxIgRCgwMVFBQkIYO\nHarPPvvM2icnJ0cPP/ywfH19FRgYqNjYWB09erTW49d2O2BBQYEcDod1zKNHj2rIkCFq2rSpfH19\n1bVrV/3nP/+56XE/e/asfvazn8nPz09hYWF6+eWXrzteAHA/IzQBQB3n4eGhOXPm6PXXX9cXX3zx\nvY61fv16ffXVV9q0aZNeeeUVZWRk6Mknn1TTpk2Vl5enCRMm6Nlnn73mddLT0zV16lTt2rVLMTEx\nGjJkiI4fPy5Jqqio0MCBA9WjRw/t2LFDa9asUXl5uUaMGOF0jLfeekteXl7aunWrFi9eXGt9Cxcu\n1Msvv6z58+drz549SkhI0FNPPaWioiJJUmlpqbp27aqpU6eqtLRUv/nNb27qvM+cOaO3335b7dq1\ns706dUVFRYUef/xx1dTUaN26dQoMDNSlS5eUkJCgJk2aaPPmzdq6dav8/PyUmJioixcv6vLlyxo2\nbJgGDBigPXv2KDc3V+PHj/9et1GmpqaqqqpKmzZt0t69ezVv3jz5+flZNd5o3NPT07Vx40a9//77\n+vjjj5WTk6OdO3fedj0AUG8ZAECdlZKSYoYOHWqMMaZv375m7NixxhhjVq5caa5+i8/IyDBRUVFO\n+7766qumdevWTsdq3bq1qa6utto6duxoHnnkEWv98uXLxtfX1yxbtswYY0xxcbGRZLKysqw+ly5d\nMi1btjTz5s0zxhjz4osvmieeeMLptUtKSowkc+DAAWOMMQMGDDA9evS44fm2aNHCzJ4926mtd+/e\n5rnnnrPWo6KiTEZGhu1xUlJSjIeHh/H19TW+vr5GkgkLCzP5+flWnyvntmvXLmOMMRs2bDCSzP79\n+023bt3M8OHDTVVVldX/n//8p+nYsaOpqamx2qqqqkyjRo3M2rVrzfHjx40kk5OTc8PzvPr1Tp48\nabXt2rXLSDLFxcXGGGMiIyNNZmZmrfvfaNxPnz5tvLy8zLvvvmttP378uGnUqJGZPHnyTdUIAPcL\nrjQBQD0xb948vfXWW9q/f/9tH6Nr165q0OD//9cQEhKiyMhIa93Dw0PBwcE6duyY034xMTHWf3t6\neio6OtqqY/fu3dqwYYP8/PyspVOnTpK+/f7RFb169bKtrbKyUl999ZViY2Od2mNjY2/rnB977DEV\nFBSooKBA27ZtU0JCgpKSkq57u9wVjz/+uNq1a6fly5fLy8vLat+9e7cOHTqkJk2aWOcZFBSkCxcu\n6PDhwwoKCtLo0aOVkJCgIUOGaOHChSotLb3luq82adIkzZo1S7GxscrIyHB6kMWNxv3w4cO6ePGi\n+vTpY+0TFBSkjh07fq+aAKA+IjQBQD3x6KOPKiEhQdOnT79mW4MGDWSMcWq7dOnSNf0aNmzotO5w\nOGptq6mpuem6zpw5oyFDhlgB5cpSVFSkRx991Orn6+t708e8E3x9fdWuXTu1a9dOvXv31l//+led\nPXtWb775pu1+gwcP1qZNm/Tpp586tZ85c0a9evW65jwPHjyon/zkJ5KkJUuWKDc3V/369dPy5cvV\noUMHffLJJ7W+zpXwevXf7bt/s5///Oc6cuSIRo0apb179yo6Olqvv/66Vc/NjDsA4MYITQBQj2Rl\nZemDDz5Qbm6uU/sDDzygsrIypw/gd/K3la7+4H/58mXl5+erc+fOkqSePXvqf//7n9q0aWOFlCvL\nrQQlf39/tWjRQlu3bnVq37p1q7p06fK9z+HK48fPnz9v2y8rK0spKSkaNGiQU3Dq2bOnioqK1Lx5\n82vOMyAgwOrXo0cPTZ8+Xf/9738VERGhd955p9bXeeCBByTJ6WpUbX+z8PBwTZgwQe+9956mTp1q\nhb4bjftDDz2khg0bKi8vzzrWyZMndfDgwZsYLQC4vxCaAKAeiYyMVHJysl577TWn9ri4OH399df6\n05/+pMOHD2vRokX66KOP7tjrLlq0SCtXrlRhYaFSU1N18uRJjR07VtK3Dys4ceKERo4cqe3bt+vw\n4cNau3atxowZo+rq6lt6nfT0dM2bN0/Lly/XgQMHNG3aNBUUFGjy5Mm3XHNVVZXKyspUVlam/fv3\n61e/+pXOnj2rIUOG3HDf+fPnKzk5WQMHDlRhYaEkKTk5Wc2aNdPQoUO1efNmFRcXKycnR5MmTdIX\nX3yh4uJiTZ8+Xbm5uTp69Kg+/vhjFRUVWeHyu9q1a6fw8HBlZmaqqKhI//73v695ul1aWprWrl2r\n4uJi7dy5Uxs2bLCOd6Nx9/Pz07hx45Senq7169dr3759Gj16tNPtmQCAb/HOCAD1zMyZM6+5fa5z\n58564403tGjRIkVFRWnbtm03/WS5m5GVlaWsrCxFRUVpy5YtWr16tZo1ayZJ1tWh6upqPfHEE4qM\njFRaWpoCAwNv+QP6pEmTNGXKFE2dOlWRkZFas2aNVq9erfbt299yzWvWrFFYWJjCwsLUp08fbd++\nXStWrFBcXNxN7f/qq69qxIgRGjhwoA4ePKjGjRtr06ZNatWqlZ5++ml17txZ48aN04ULF+Tv76/G\njRursLBQw4cPV4cOHTR+/Hilpqbq2WefrfX4DRs21LJly1RYWKhu3bpp3rx5mjVrllOf6upqpaam\nqnPnzkpMTFSHDh30xhtvSLq5cX/ppZf0yCOPaMiQIYqPj1f//v1v+N0yALgfOcx3b3IHAAAAAFi4\n0gQAAAAANghNAAAAAGCD0AQAAAAANghNAAAAAGCD0AQAAAAANghNAAAAAGCD0AQAAAAANghNAAAA\nAGCD0AQAAAAANghNAAAAAGCD0AQAAAAANv4PLWmk5TWTLh4AAAAASUVORK5CYII=\n",
      "text/plain": [
<<<<<<< HEAD
       "<matplotlib.figure.Figure at 0x118f9fa90>"
=======
       "<matplotlib.figure.Figure at 0x11a3adfd0>"
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.reset_defaults()\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.hist(train[train['holiday'] == 1]['count'], color= 'red', alpha = .5, label= 'holiday')\n",
    "plt.hist(train[train['holiday'] == 0 ]['count'], color= 'blue', alpha = .5, label='not holiday' )\n",
    "plt.xlabel('Number of Bikes used')\n",
    "plt.ylabel('Frequency')\n",
    "plt.title('Bike Usage based on holiday')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 7,
=======
   "execution_count": 379,
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAzkAAAHWCAYAAABUn0dnAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAAPYQAAD2EBqD+naQAAIABJREFUeJzs3Xl0FfX9//HXTchKNhazwQXCpiwWNUhk0yihAauAFqkU\nLaBlEVAgbbGhylYxigpoRaFYQI6hohylLl9RDIJQMUL4oVJ2AY2EJEVIbpLCBXLn94eHOV4TIAk3\nTDJ5Ps65B+czn5l5X86HwMv5fGYchmEYAgAAAACb8LO6AAAAAADwJUIOAAAAAFsh5AAAAACwFUIO\nAAAAAFsh5AAAAACwFUIOAAAAAFsh5AAAAACwFUIOAAAAAFsh5AAAAACwFUIOAKBO27hxoxwOhzZu\n3Gh1KQCAeoKQAwAAAMBWHIZhGFYXAQDAhXg8Hp05c0aBgYHy8+P/zQEALo2QAwCok06fPk2wAQDU\nCH9zAABqrKSkRFOmTFGbNm0UFBSk6Oho9e/fXzt27JAkJScnq2vXrsrJyVGvXr0UEhKihIQELV68\n2Os859fdvP7663rsscfUokULhYaGyuVyVbom5/x5d+/erVtvvVWhoaFq0aKF5s2bV6HGb7/9VoMG\nDVLjxo0VHR2tqVOn6sMPP2SdDwDYWCOrCwAA1F/jx4/XmjVrNGnSJHXu3Fk//PCDtmzZoj179uiG\nG26QJJ08eVK33367hg0bpuHDh+uNN97QQw89pMDAQD3wwANe5/vrX/+qwMBA/fGPf5Tb7VZgYOAF\nr33y5EkNGDBAd999t4YNG6Y1a9bo0Ucf1bXXXquBAwdKksrKynTbbbfp2LFjmjx5smJjY7Vq1Sp9\n8skntfebAgCwHCEHAFBj77//vsaMGaPnnnvObJs2bZpXn7y8PD333HNKS0uTJI0bN05JSUlKT0/X\n/fffr4CAALPv6dOntX37doWEhFzy2nl5eVq5cqXuv/9+SdKDDz6o1q1b6x//+IcZcpYsWaJDhw5p\n7dq1Gjx4sHn966+//vK+OACgTmO6GgCgxqKiopSdna28vLwL9mnUqJHGjRtnbgcGBmrcuHEqLCxU\nTk6OV9+RI0dWKeBIUlhYmO677z6v8/bo0UOHDh0y29atW6cWLVpo0KBBZltwcLDGjBlTpWsAAOon\nQg4AoMbmzZunXbt2yel0qkePHpo1a5ZXyJCk+Ph4NW7c2KutY8eOkqQjR454tSckJFT52i1btpTD\n4fBqa9KkiU6ePGluf/vtt2rXrl2Ffu3bt6/ydQAA9Q8hBwBQY8OGDdOhQ4f0t7/9TfHx8XrmmWfU\npUsXffDBBzU6X1Xv4kiSv79/pe08NBQAQMgBAFyWuLg4TZgwQWvXrtXhw4fVrFkzzZ0719yfl5en\nsrIyr2P2798vSWrTpk2t1ta6dWt98803FYLPwYMHa/W6AABrEXIAADVSXl6u4uJir7bo6GjFx8fL\n7XabbefOndOSJUvM7TNnzmjJkiW66qqrlJiYWKs1pqam6ujRo3rnnXfMttOnT2vp0qW1el0AgLV4\nuhoAoEZKSkrUsmVLDR06VN26dVNYWJg+/vhjbdu2zetpa/Hx8Xr66ad15MgRdezYUatXr9bOnTv1\n97//3evJarVh3LhxevHFFzV8+HBNnjxZcXFxyszMVHBwsCRVWKsDALAHQg4AoEZCQ0M1YcIEffTR\nR3rrrbfk8XjUvn17vfTSS3rooYfMfk2aNNGrr76qhx9+WEuXLlVMTIxefPHFK/KEs7CwMG3YsEEP\nP/ywnn/+eTVu3Fj33Xef+vTpo6FDh5phBwBgLw6DFZoAgFqSnJys48ePa9euXVaX4mXhwoWaOnWq\nvv/+e7Vo0cLqcgAAPsaaHACArZ06dcpr+/Tp01qyZIk6dOhAwAEAm2K6GgDA1u6++261atVK1113\nnYqLi/Xaa69p7969yszMtLo0AEAtIeQAAGwtNTVVr7zyijIzM1VeXq7OnTvr9ddf129+8xurSwMA\n1BLW5AAAAACwFdbkAAAAALAVQg4AAAAAW6lza3I8Ho/y8vIUHh7OS9oAAACABswwDJWUlCg+Pl5+\nflW/P1PnQk5eXp6cTqfVZQAAAACoI3Jzc9WyZcsq969zISc8PFzSj18kIiLC4mqAhiUxUcrPl2Jj\npZwcq6sBAAANncvlktPpNDNCVdW5kHN+ilpERAQhx8cWrN9vdQk+MbV/R6tLsK1Tp6TS0h9/5Y8f\nAACoK6q7jIUHDwAAAACwFUIOAAAAAFsh5AAAAACwFUIOAAAAAFsh5AAAAACwFUIOAAAAAFsh5AAA\nAACwlTr3nhzgUnjfDwAAAC6GkAPAtHjxjy8CDQmxuhIAAICaI+QAMN1xh9UVAAAAXL5qr8n59NNP\ndeeddyo+Pl4Oh0Nr16712m8YhmbMmKG4uDiFhIQoJSVFBw4c8FnBAAAAAHAx1Q45ZWVl6tatmxYt\nWlTp/nnz5umFF17Q4sWLlZ2drcaNGys1NVWnT5++7GIBAAAA4FKqPV1t4MCBGjhwYKX7DMPQwoUL\n9dhjj2nw4MGSpJUrVyomJkZr167Vvffee3nVAqhVOTnSmTNSYKCUmGh1NQAAADXj00dIHz58WPn5\n+UpJSTHbIiMjlZSUpK1bt1Z6jNvtlsvl8voAsMbgwVKvXj/+CgAAUF/5NOTk5+dLkmJiYrzaY2Ji\nzH0/l5GRocjISPPjdDp9WRIAAACABsbyl4Gmp6eruLjY/OTm5lpdEgAAAIB6zKchJzY2VpJUUFDg\n1V5QUGDu+7mgoCBFRER4fQAAAACgpnwachISEhQbG6usrCyzzeVyKTs7Wz179vTlpQAAAACgUtV+\nulppaakOHjxobh8+fFg7d+5U06ZN1apVK02ZMkVPPPGEOnTooISEBD3++OOKj4/XkCFDfFr4lbRg\n/X6rSwAAAABQRdUOOdu3b9ett95qbqelpUmSRo4cqRUrVmjatGkqKyvT2LFjVVRUpD59+mjdunUK\nDg72XdUAAAAAcAHVDjnJyckyDOOC+x0Oh+bMmaM5c+ZcVmEAAAAAUBOWP10NAAAAAHyp2ndyAPhG\nXVzrVepOkBSgUvdZLVh/uErHTO3fsXaLQrXUxXFVE4wrAMDlIOQAMD36yhHJcEiOC09JBQAAqOsI\nOQBMwaGGJAIOAACo31iTAwAAAMBWuJMD4LKwBgQAANQ1hBwApo1ronT6f/4KDi1X8tAiq8sBAACo\nEUIOANOmt5qo+HiAIpufJeQAAIB6i5ADALLPtDsAAMCDBwAAAADYDCEHAAAAgK0QcgAAAADYCiEH\nAAAAgK0QcgAAAADYCiEHAAAAgK0QcgAAAADYCu/JAWBq2d6tqKvOKSyy3OpS0MDZ5b1FU/t3tLoE\nAGiQCDkATA/OybO6BAAAgMvGdDUAAAAAtsKdHAAAcFFMHwRQ33AnBwAAAICtcCcHgOkfM+JVWuyv\nsMhy1ucAAIB6i5ADwPT9wSAVHw9QZPOzVpcCAABQY0xXAwAAAGArhBwAAAAAtkLIAQAAAGArhBwA\nAAAAtlJrDx5YtGiRnnnmGeXn56tbt27629/+ph49etTW5QAAqHPs8n4ZAKhvauVOzurVq5WWlqaZ\nM2dqx44d6tatm1JTU1VYWFgblwMAAAAAU62EnPnz52vMmDEaPXq0OnfurMWLFys0NFTLli2rjcsB\nAAAAgMnn09XOnDmjnJwcpaenm21+fn5KSUnR1q1bK/R3u91yu93mdnFxsSTJ5XL5urQaO11WanUJ\nwBVheFySAmR4zjLuAdhOXfq3BYCqOf/n1jCMah3n85Bz/PhxlZeXKyYmxqs9JiZGe/furdA/IyND\ns2fPrtDudDp9XRqAKnKdkKbfZXUVAOBb060uAECNlZSUKDIyssr9a+3BA1WVnp6utLQ0c9vj8ejE\niRNq1qyZHA6HhZUBlXO5XHI6ncrNzVVERITV5QCVYpyiPmCcor5grFrHMAyVlJQoPj6+Wsf5POQ0\nb95c/v7+Kigo8GovKChQbGxshf5BQUEKCgryaouKivJ1WYDPRURE8IMOdR7jFPUB4xT1BWPVGtW5\ng3Oezx88EBgYqMTERGVlZZltHo9HWVlZ6tmzp68vBwAAAABeamW6WlpamkaOHKnu3burR48eWrhw\nocrKyjR69OjauBwAAAAAmPxnzZo1y9cn7dq1q6KiojR37lw9++yzkqTMzExdffXVvr4UYAl/f38l\nJyerUSPLl7UBF8Q4RX3AOEV9wVitXxxGdZ/HBgAAAAB1WK28DBQAAAAArELIAQAAAGArhBwAAAAA\ntkLIAQAAAGArhBwAAAAAtkLIAQAAAGArhBwAAAAAtkLIAQAAAGArhBwAAAAAtkLIAQAAAGArhBwA\nAAAAtkLIAQAAAGArhBwAAAAAtkLIAQAAAGArhBwAAAAAtkLIAQAAAGArhBwAAAAAtkLIAQAAAGAr\nhBwAAAAAtkLIAQAAAGArhBwAAAAAtkLIAQAAAGArhBwAAAAAtkLIAQAAAGArhBwAAAAAtkLIAQAA\nAGArhBwAAAAAtkLIAQAAAGArhBwAAAAAtkLIAQDgIsrKyqwuAQBQTYQcAEClSkpKNGXKFLVp00ZB\nQUGKjo5W//79tWPHDklSmzZtNGrUqArHJScnKzk52dzeuHGjHA6H3njjDc2ePVstWrRQeHi4hg4d\nquLiYrndbk2ZMkXR0dEKCwvT6NGj5Xa7vc7pcDg0adIkvfnmm+rcubNCQkLUs2dPff3115KkJUuW\nqH379goODlZycrKOHDlSoa7s7GwNGDBAkZGRCg0N1S233KJ///vfXn1mzZolh8Oh3bt367e//a2a\nNGmiPn36XN5vJADgimtkdQEAgLpp/PjxWrNmjSZNmqTOnTvrhx9+0JYtW7Rnzx7dcMMN1T5fRkaG\nQkJC9Oc//1kHDx7U3/72NwUEBMjPz08nT57UrFmz9Pnnn2vFihVKSEjQjBkzvI7fvHmz3nnnHU2c\nONE83x133KFp06bppZde0oQJE3Ty5EnNmzdPDzzwgDZs2GAeu2HDBg0cOFCJiYmaOXOm/Pz8tHz5\nct12223avHmzevTo4XWte+65Rx06dNCTTz4pwzBq8LsHALASIQcAUKn3339fY8aM0XPPPWe2TZs2\nrcbnO3funDZt2qSAgABJ0n//+1+9/vrrGjBggP7v//5PkjRhwgQdPHhQy5YtqxBy9u3bp71796pN\nmzaSpCZNmmjcuHF64okntH//foWHh0uSysvLlZGRoSNHjqhNmzYyDEPjx4/Xrbfeqg8++EAOh0OS\nNG7cOHXp0kWPPfaYPvroI69rdevWTatWrarxdwUAWIvpagCASkVFRSk7O1t5eXk+Od/vfvc7M+BI\nUlJSkgzD0AMPPODVLykpSbm5uTp37pxXe79+/cyAc76fJP361782A85P2w8dOiRJ2rlzpw4cOKDf\n/va3+uGHH3T8+HEdP35cZWVl6tevnz799FN5PB6va40fP/7yvzAAwDLcyQEAVGrevHkaOXKknE6n\nEhMTdfvtt+t3v/ud2rZtW6PztWrVyms7MjJSkuR0Oiu0ezweFRcXq1mzZjU6XpJOnjwpSTpw4IAk\naeTIkResrbi4WE2aNDG3ExISLv2FAAB1FiEHAFCpYcOGqW/fvnr77bf10Ucf6ZlnntHTTz+tt956\nSwMHDjSnff1ceXm5/P39K7RX1nax9p+vhanp8efv0jzzzDO67rrrKu0bFhbmtR0SElJpPwBA/UDI\nAQBcUFxcnCZMmKAJEyaosLBQN9xwg+bOnauBAweqSZMmKioqqnDMt99+W+O7PbWhXbt2kqSIiAil\npKRYXA0A4EpgTQ4AoILy8nIVFxd7tUVHRys+Pt58vHO7du30+eef68yZM2af9957T7m5uVe01ktJ\nTExUu3bt9Oyzz6q0tLTC/v/+978WVAUAqE3cyQEAVFBSUqKWLVtq6NCh6tatm8LCwvTxxx9r27Zt\n5tPWfv/732vNmjUaMGCAhg0bpm+++UavvfaaeeekrvDz89Mrr7yigQMHqkuXLho9erRatGiho0eP\n6pNPPlFERITeffddq8sEAPgQIQcAUEFoaKgmTJigjz76SG+99ZY8Ho/at2+vl156SQ899JAkKTU1\nVc8995zmz5+vKVOmqHv37nrvvff0hz/8weLqK0pOTtbWrVv117/+VS+++KJKS0sVGxurpKQkjRs3\nzuryAAA+5jB4yxkAAAAAG2FNDgAAAABbIeQAAAAAsBVCDgAAAABbIeQAAAAAsBVCDgAAAABbIeQA\nAAAAsJU6954cj8ejvLw8hYeHy+FwWF0OAAAAAIsYhqGSkhLFx8fLz6/q92fqXMjJy8uT0+m0ugwA\nAAAAdURubq5atmxZ5f7VCjkZGRl66623tHfvXoWEhKhXr156+umndfXVV5t9DMPQzJkztXTpUhUV\nFal37956+eWX1aFDhypdIzw83PwiERER1SkPAIBakZgo5edLsbFSTo7V1QBAw+FyueR0Os2MUFXV\nCjmbNm3SxIkTdeONN+rcuXOaPn26fvnLX2r37t1q3LixJGnevHl64YUX9OqrryohIUGPP/64UlNT\ntXv3bgUHB1/yGuenqEVERBByAMCmFqzfb3UJ1fLfogSVlgbov0Vn9Y/swzU+z9T+HX1YFQA0HNVd\nxlKtkLNu3Tqv7RUrVig6Olo5OTm6+eabZRiGFi5cqMcee0yDBw+WJK1cuVIxMTFau3at7r333moV\nBwAAAADVdVlPVysuLpYkNW3aVJJ0+PBh5efnKyUlxewTGRmppKQkbd26tdJzuN1uuVwurw8AAAAA\n1FSNQ47H49GUKVPUu3dvde3aVZKUn58vSYqJifHqGxMTY+77uYyMDEVGRpofHjoAAAAA4HLUOORM\nnDhRu3bt0uuvv35ZBaSnp6u4uNj85ObmXtb5AAAAADRsNXqE9KRJk/Tee+/p008/9XqUW2xsrCSp\noKBAcXFxZntBQYGuu+66Ss8VFBSkoKCgmpQBAAAAABVU606OYRiaNGmS3n77bW3YsEEJCQle+xMS\nEhQbG6usrCyzzeVyKTs7Wz179vRNxQAAAABwEdW6kzNx4kStWrVK//rXvxQeHm6us4mMjFRISIgc\nDoemTJmiJ554Qh06dDAfIR0fH68hQ4bUyhcAAAAAgJ+qVsh5+eWXJUnJycle7cuXL9eoUaMkSdOm\nTVNZWZnGjh2roqIi9enTR+vWravSO3IAAAAA4HJVK+QYhnHJPg6HQ3PmzNGcOXNqXBQAAHXJ0EcK\ndfaMQwGBl/57EABgvRo9eAAAgIaky01lVpcAAKiGy3oZKAAAAADUNYQcAAAAALbCdDUAAC4hd3+Q\nys855N/IkLOj2+pyAACXQMgBAOASls2KV/HxAEU2P6uZqw5bXQ4A4BKYrgYAAADAVgg5AAAAAGyF\nkAMAAADAVliTAwAWWrB+v9UlAABgO9zJAQAAAGArhBwAAAAAtkLIAQAAAGArhBwAAAAAtsKDBwAA\nAGpJQ324yNT+Ha0uAQ0cIQcAgEt49JUjkuGQHIbVpQAAqoCQAwDAJQSHGpIIOJejod7RAGAN1uQA\nAAAAsBVCDgAAAABbYboaAACXsHFNlE7/z1/BoeVKHlpkdTkAgEsg5AAAcAmb3mqi4uMBimx+lpAD\nAPUA09UAAAAA2AohBwAAAICtEHIAAAAA2AprcgAAuEJ4VwwAXBncyQEAAABgK4QcAAAAALZCyAEA\nAABgK4QcAAAAALbCgwdQJzXUxblT+3e0ugQAlWjZ3q2oq84pLLLc6lIAAFVAyAEA4BIenJNndQkA\ngGog5AAAAMCnGuqMDIlZGXUFa3IAAAAA2AohBwAAAICtMF0NqEO4vQ/UTf+YEa/SYn+FRZazPgcA\n6gFCDgAAl/D9wSAVHw9QZPOzVpcCAKgCQg6AOqEh38UCAAC+xZocAAAAALZCyAEAAABgK0xXq+OY\nwgMAAABUT63dyVm0aJHatGmj4OBgJSUl6YsvvqitSwEAAACAqVZCzurVq5WWlqaZM2dqx44d6tat\nm1JTU1VYWFgblwMAAAAAU62EnPnz52vMmDEaPXq0OnfurMWLFys0NFTLli2rjcsBAAAAgMnna3LO\nnDmjnJwcpaenm21+fn5KSUnR1q1bK/R3u91yu93mdnFxsSTJ5XL5urR66XRZqdUlAECDZ3hckgJk\neM7ycxnARfFvWN86//tpGEa1jvN5yDl+/LjKy8sVExPj1R4TE6O9e/dW6J+RkaHZs2dXaHc6nb4u\nDQCAy+I6IU2/y+oqANRl060uwKZKSkoUGRlZ5f6WP10tPT1daWlp5rbH49GJEyfUrFkzORwOCysD\nKudyueR0OpWbm6uIiAirywEqxThFfcA4RX3BWLWOYRgqKSlRfHx8tY7zechp3ry5/P39VVBQ4NVe\nUFCg2NjYCv2DgoIUFBTk1RYVFeXrsgCfi4iI4Acd6jzGKeoDxinqC8aqNapzB+c8nz94IDAwUImJ\nicrKyjLbPB6PsrKy1LNnT19fDgAAAAC81Mp0tbS0NI0cOVLdu3dXjx49tHDhQpWVlWn06NG1cTkA\nAAAAMPnPmjVrlq9P2rVrV0VFRWnu3Ll69tlnJUmZmZm6+uqrfX0pwBL+/v5KTk5Wo0aWL2sDLohx\nivqAcYr6grFavziM6j6PDQAAAADqsFp5GSgAAAAAWIWQAwAAAMBWCDkAAAAAbIWQAwAAAMBWCDkA\nAAAAbIWQAwAAAMBWCDkAAAAAbIWQAwAAAMBWCDkAAAAAbIWQAwAAAMBWCDkAAAAAbIWQAwAAAMBW\nCDkAAAAAbIWQAwAAAMBWCDkAAAAAbIWQAwAAAMBWCDkAAAAAbIWQAwAAAMBWCDkAAAAAbIWQAwAA\nAMBWCDkAAAAAbIWQAwAAAMBWCDkAAAAAbIWQAwAAAMBWCDkAAAAAbIWQAwAAAMBWCDkAgCtu27Zt\n6tWrlxo3biyHw6GdO3dW6bgVK1bI4XDoyJEjZltycrKSk5Nrp1AAQL3UyOoCAAANy9mzZ3XPPfco\nODhYCxYsUGhoqFq3bm11WQAAGyHkAACuqG+++Ubffvutli5dqt///vdWlwMAsCGmqwEArqjCwkJJ\nUlRUlMWVAADsipADALhiRo0apVtuuUWSdM8998jhcCg5OVlfffWVRo0apbZt2yo4OFixsbF64IEH\n9MMPP1hcMQCgPmK6GgDgihk3bpxatGihJ598Uo888ohuvPFGxcTEaP369Tp06JBGjx6t2NhY/ec/\n/9Hf//53/ec//9Hnn38uh8NhdekAgHqEkAMAuGJ69uwpt9utJ598Un379tXQoUMlSX369NEf/vAH\nr7433XSThg8fri1btqhv375WlAsAqKeYrgYAsFxISIj536dPn9bx48d10003SZJ27NhhVVkAgHqK\nkAMAsNyJEyc0efJkxcTEKCQkRFdddZUSEhIkScXFxRZXBwCob5iuBgCw3LBhw/TZZ5/pT3/6k667\n7jqFhYXJ4/FowIAB8ng8VpcHAKhnCDkAAEudPHlSWVlZmj17tmbMmGG2HzhwwMKqAAD1GdPVAACW\n8vf3lyQZhuHVvnDhQivKAQDYAHdyAACWioiI0M0336x58+bp7NmzatGihT766CMdPnzY6tIAAPUU\nd3IAAJZbtWqVUlNTtWjRIqWnpysgIEAffPCB1WUBAOoph/Hz+QEAAAAAUI9xJwcAAACArRByAAAA\nANgKIQcAAACArRByAAAAANgKIQcAAACArVQr5GRkZOjGG29UeHi4oqOjNWTIEO3bt8+rz6hRo+Rw\nOLw+AwYM8GnRAAAAAHAh1XoZ6KZNmzRx4kTdeOONOnfunKZPn65f/vKX2r17txo3bmz2GzBggJYv\nX25uBwUFVfkaHo9HeXl5Cg8Pl8PhqE55AAAAAGzEMAyVlJQoPj5efn5Vvz9TrZCzbt06r+0VK1Yo\nOjpaOTk5uvnmm832oKAgxcbGVufUpry8PDmdzhodCwAAAMB+cnNz1bJlyyr3r1bI+bni4mJJUtOm\nTb3aN27cqOjoaDVp0kS33XabnnjiCTVr1qzSc7jdbrndbnP7/LtJc3NzFRERcTnlAQCAakpMlPLz\npdhYKSfH6moANHQul0tOp1Ph4eHVOs5hnE8V1eTxeDRo0CAVFRVpy5YtZvvrr7+u0NBQJSQk6Jtv\nvtH06dMVFhamrVu3yt/fv8J5Zs2apdmzZ1doLy4uJuQAwBW2YP1+q0uw3NT+Ha0uwVItW0pHj0ot\nWkjff291NQAaOpfLpcjIyGpngxrfyZk4caJ27drlFXAk6d577zX/+9prr9UvfvELtWvXThs3blS/\nfv0qnCc9PV1paWnm9vm0BgAAAAA1UaNHSE+aNEnvvfeePvnkk0vOjWvbtq2aN2+ugwcPVro/KChI\nERERXh8AAAAAqKlq3ckxDEMPP/yw3n77bW3cuFEJCQmXPOb777/XDz/8oLi4uBoXCQAAAABVVa07\nORMnTtRrr72mVatWKTw8XPn5+crPz9epU6ckSaWlpfrTn/6kzz//XEeOHFFWVpYGDx6s9u3bKzU1\ntVa+AAAAAAD8VLVCzssvv6zi4mIlJycrLi7O/KxevVqS5O/vr6+++kqDBg1Sx44d9eCDDyoxMVGb\nN2+u1rtyAAAAAKCmqj1d7WJCQkL04YcfXlZBAAAAAHA5avTgAQAAAACoqwg5AAAAAGylxu/JAQAA\n9rN4sXTqlBQSYnUlAFBzhBwAAGC64w6rKwCAy8d0NQAAAAC2QsgBAAAAYCtMVwMAAKacHOnMGSkw\nUEpMtLoaAKgZQg4AADANHiwdPSq1aCF9/73V1QBAzTBdDQAAAICtEHIAAAAA2AohBwAAAICtEHIA\nAAAA2AohBwAAAICtEHIAAAAA2AqPkAYAAICXBev3W12C5ab272h1CbgM3MkBAAAAYCuEHAAAAAC2\nwnQ1AABg2rNHMgzJ4bC6EgCoOUIOAAAwhYezHoO1GED9x3Q1AAAAALZCyAEAAABgK0xXAwAApvnz\npQ//XzMFh5YreWiR1eUAQI0QcgAAgGn+fOno0WaKbH6WkAOg3iLkAADwEw190X2pO0FSgNVlAMBl\nYU0OAACMXY1/AAAdH0lEQVQAAFvhTg4AAMBPNPS7eYAdcCcHAAAAgK0QcgAAAADYCiEHAAAAgK2w\nJgcAfoK5+AAA1H/cyQEAAABgK9zJAQAAppbt3Yq66pzCIsutLgUAaoyQAwAATA/OybO6BAC4bExX\nAwAAAGArhBwAAAAAtkLIAQAAAGArrMkBAACmf8yIV2mxv8Iiy1mfA6DeIuQAAADT9weDVHw8QJHN\nz1pdCmCphv7etKn9O1pdwmVhuhoAAAAAWyHkAAAAALAVQg4AAAAAWyHkAAAAALCVWgs5ixYtUps2\nbRQcHKykpCR98cUXtXUpAAAAADDVSshZvXq10tLSNHPmTO3YsUPdunVTamqqCgsLa+NyAAAAAGCq\nlUdIz58/X2PGjNHo0aMlSYsXL9b777+vZcuW6c9//nNtXBI+0NAflYj6/7hIAAAAqRZCzpkzZ5ST\nk6P09HSzzc/PTykpKdq6dWuF/m63W26329wuLi6WJLlcLl+Xhks4XVZqdQmwGH/u+HMAGB6XpAAZ\nnrP8eQAasLryb4LzdRiGUa3jfB5yjh8/rvLycsXExHi1x8TEaO/evRX6Z2RkaPbs2RXanU6nr0sD\ncAnTrS4AQJ3hOiFNv8vqKgBYpa79m6CkpESRkZFV7l8r09WqIz09XWlpaea2x+PRiRMn1KxZMzkc\nDgsrAyrncrnkdDqVm5uriIgIq8sBKsU4RX3AOEV9wVi1jmEYKikpUXx8fLWO83nIad68ufz9/VVQ\nUODVXlBQoNjY2Ar9g4KCFBQU5NUWFRXl67IAn4uIiOAHHeo8xinqA8Yp6gvGqjWqcwfnPJ8/XS0w\nMFCJiYnKysoy2zwej7KystSzZ09fXw4AAAAAvNTKdLW0tDSNHDlS3bt3V48ePbRw4UKVlZWZT1sD\nAAAAgNriP2vWrFm+PmnXrl0VFRWluXPn6tlnn5UkZWZm6uqrr/b1pQBL+Pv7Kzk5WY0aWb6sDbgg\nxinqA8Yp6gvGav3iMKr7PDYAAAAAqMN8viYHAAAAAKxEyAEAAABgK4QcAAAAALZCyAEAAABgK4Qc\nAAAAALZCyAEAAABgK4QcAAAAALZCyAEAAABgK4QcAAAAALZCyAEAAABgK4QcAAAAALZCyAEAAABg\nK4QcAAAAALZCyAEAAABgK4QcAAAAALZCyAEAAABgK4QcAAAAALZCyAEAAABgK4QcAAAAALZCyAEA\nAABgK4QcAAAAALZCyAEAAABgK4QcAAAAALZCyAEAAABgK4QcAAAAALZCyAEAAABgK4QcAMAVk5yc\nrOTkZKvLAADYHCEHAFAvrFq1SgsXLrS6DABAPeAwDMOwuggAQMNw5swZSVJgYGC1j73jjju0a9cu\nHTlyxMdVAQDshjs5AIArJjAwsEYBp7Z4PB6dPn3a6jIAAD5GyAEAVNtXX30lh8Ohd955x2zLycmR\nw+HQDTfc4NV34MCBSkpKklRxTc7GjRvlcDj0xhtvaO7cuWrZsqWCg4PVr18/HTx40OyXnJys999/\nX99++60cDoccDofatGlj7ne73Zo5c6bat2+voKAgOZ1OTZs2TW6326sWh8OhSZMmKTMzU126dFFQ\nUJDWrVvnw98ZAEBd0MjqAgAA9U/Xrl0VFRWlTz/9VIMGDZIkbd68WX5+fvryyy/lcrkUEREhj8ej\nzz77TGPHjr3o+Z566in5+fnpj3/8o4qLizVv3jyNGDFC2dnZkqS//OUvKi4u1vfff68FCxZIksLC\nwiT9eDdm0KBB2rJli8aOHatOnTrp66+/1oIFC7R//36tXbvW61obNmzQG2+8oUmTJql58+ZeYQkA\nYA+EHABAtfn5+al3797avHmz2bZ582YNGTJE//rXv/TZZ59pwIABZuDp27fvRc93+vRp7dy505zK\n1qRJE02ePFm7du1S165d1b9/f7Vo0UInT57Ufffd53XsqlWr9PHHH2vTpk3q06eP2d61a1eNHz9e\nn332mXr16mW279u3T19//bU6d+7si98KAEAdxHQ1AECN9O3bVzt27FBZWZkkacuWLbr99tt13XXX\nmeFn8+bNcjgcXuGjMqNHj/Zaq3M+FB06dOiSdbz55pvq1KmTrrnmGh0/ftz83HbbbZKkTz75xKv/\nLbfcQsABAJvjTg4AoEb69u2rc+fOaevWrXI6nSosLFTfvn31n//8xyvkdO7cWU2bNr3ouVq1auW1\n3aRJE0nSyZMnL1nHgQMHtGfPHl111VWV7i8sLPTaTkhIuOQ5AQD1GyEHAFAj3bt3V3BwsD799FO1\natVK0dHR6tixo/r27auXXnpJbrdbmzdv1l133XXJc/n7+1faXpW3HHg8Hl177bWaP39+pfudTqfX\n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\ni+F2u80+jFN7cRjGT171CgAAAAD1HGtyAAAAANgKIQcAAACArRByAAAAANgKIQcAAACArRByAAAA\nANgKIQcAAACArRByAAAAANgKIQcAAACArRByAAD1zqxZsxQTEyOHw6G1a9fW+DyjRo3SkCFDzO3k\n5GRNmTLFFyUCACxEyAEAG8vPz9fDDz+stm3bKigoSE6nU3feeaeysrKueC2XG0jO27Nnj2bPnq0l\nS5bo2LFjGjhwYIU+R44ckcPhMD+BgYFq3769nnjiCRmGYfZ7/vnntWLFisuuCQBQtzSyugAAQO04\ncuSIevfuraioKD3zzDO69tprdfbsWX344YeaOHGi9u7da3WJNfLNN99IkgYPHiyHw3HRvh9//LG6\ndOkit9utLVu26Pe//73i4uL04IMPSpIiIyNrvV4AwJXHnRwAsKkJEybI4XDoiy++0K9//Wt17NhR\nXbp0UVpamj7//HOz33fffafBgwcrLCxMERERGjZsmAoKCsz9P5/SJUlTpkxRcnKyuZ2cnKxHHnlE\n06ZNU9OmTRUbG6tZs2aZ+9u0aSNJuuuuu+RwOMztynz99de67bbbFBISombNmmns2LEqLS2V9OM0\ntTvvvFOS5Ofnd8mQ06xZM8XGxqp169YaMWKEevfurR07dlz0u/3U+++/r8jISGVmZpptr7zyijp1\n6qTg4GBdc801eumll8x9Z86c0aRJkxQXF6fg4GC1bt1aGRkZF60RAOB7hBwAsKETJ05o3bp1mjhx\noho3blxhf1RUlCTJ4/Fo8ODBOnHihDZt2qT169fr0KFD+s1vflPta7766qtq3LixsrOzNW/ePM2Z\nM0fr16+XJG3btk2StHz5ch07dszc/rmysjKlpqaqSZMm2rZtm9588019/PHHmjRpkiTpj3/8o5Yv\nXy5JOnbsmI4dO1bl+rZv366cnBwlJSVVqf+qVas0fPhwZWZmasSIEZKkzMxMzZgxQ3PnztWePXv0\n5JNP6vHHH9err74qSXrhhRf0zjvv6I033tC+ffuUmZl50UAHAKgdTFcDABs6ePCgDMPQNddcc9F+\nWVlZ+vrrr3X48GE5nU5J0sqVK9WlSxdt27ZNN954Y5Wv+Ytf/EIzZ86UJHXo0EEvvviisrKy1L9/\nf1111VWSfgxXsbGxFzzHqlWrdPr0aa1cudIMZy+++KLuvPNOPf3004qJiTED2sXOc16vXr3k5+en\nM2fO6OzZsxo7dqx+97vfXfK4RYsW6S9/+Yveffdd3XLLLWb7zJkz9dxzz+nuu++WJCUkJGj37t1a\nsmSJRo4cqe+++04dOnRQnz595HA41Lp160teCwDge4QcALChny6uv5g9e/bI6XSaAUeSOnfurKio\nKO3Zs6faIeen4uLiVFhYWOXjz9fTrVs3r7tPvXv3lsfj0b59+xQTE1Ot861evVqdOnXS2bNntWvX\nLj388MNq0qSJnnrqqQses2bNGhUWFurf//631/cvKyvTN998owcffFBjxowx28+dO2eu7Rk1apT6\n9++vq6++WgMGDNAdd9yhX/7yl9WqGQBw+Qg5AGBDHTp0kMPh8MnDBfz8/CqEprNnz1boFxAQ4LXt\ncDjk8Xgu+/qXw+l0qn379pKkTp066dChQ3rsscc0a9YsBQcHV3rM9ddfrx07dmjZsmXq3r27ue7n\n/LqgpUuXVpjy5u/vL0m64YYbdPjwYX3wwQf6+OOPNWzYMKWkpGjNmjW19RUBAJVgTQ4A2FDTpk2V\nmpqqRYsWqaysrML+oqIiST/+wz83N1e5ubnmvt27d6uoqEidO3eWJF111VUV1r7s3Lmz2jUFBASo\n/P+3d/cgrUNhGMefm0kEC05+gFCrWAQ7CI3gYqlGBGfBoaiLuHUquIk4CUILFp0UKl1KkQxd/EA0\nk4tIQSwoLYiDQxfr4CaWe4cLhYpX9F4Q7uH/gyzhTXKSJTzJeTn1+oc1g4ODurq6ahrz+fm5LMtS\nMBj88jXfsixLr6+venl5+WNNX1+fPM9ToVBQPB5v7O/o6FB3d7fu7u7U39/ftPX29jbqfD6fZmdn\ntbOzo3w+L9d1VavV/nnsAIDPI+QAgKG2t7dVr9c1MjIi13VVqVR0c3OjdDqt0dFRSZLjOAqFQorF\nYioWi7q4uND8/LwikYjC4bAkaXx8XJeXl8pms6pUKlpdXVWpVPryePx+v05PT1WtVvX09PRuTSwW\nU0tLixYWFlQqleR5nuLxuObm5r48VU2SHh8fVa1W9fDwoMPDQ21ubioajcrn83143MDAgDzPk+u6\nTYuDrq2taX19Xel0WuVyWdfX18pkMkqlUpKkVCqlXC6n29tblctl7e/vq7Ozs9FHBAD4HoQcADBU\nIBBQsVhUNBpVIpHQ0NCQJicndXR0pGQyKen3lLJCoaD29naNjY3JcRwFAgHl8/nGeaamprSysqLl\n5WXZtq3n5+dPNe+/lUwmdXJyop6eHg0PD79b09raquPjY9VqNdm2rZmZGU1MTGhra+uvnoHjOOrq\n6pLf79fS0pKmp6eb7u0jwWBQZ2dnyuVySiQSkqTFxUXt7u4qk8koFAopEolob2+v8Senra1NGxsb\nCofDsm1b9/f3Ojg4kGXxugWA7/Tj52e7UwEAAADgP8CnJQAAAABGIeQAAAAAMAohBwAAAIBRCDkA\nAAAAjELIAQAAAGAUQg4AAAAAoxByAAAAABiFkAMAAADAKIQcAAAAAEYh5AAAAAAwCiEHAAAAgFF+\nAbfcA8+uTXMaAAAAAElFTkSuQmCC\n",
      "text/plain": [
<<<<<<< HEAD
       "<matplotlib.figure.Figure at 0x119559a58>"
=======
       "<matplotlib.figure.Figure at 0x11b605080>"
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, (ax1, ax2, ax3, ax4) = plt.subplots(nrows=4, sharex=True, figsize = (10,5))\n",
    "fig.subplots_adjust(hspace=1)\n",
    "ax1.hist(train[train['season'] == 1]['count'], alpha = .5)\n",
    "ax1.axvline(train[train['season'] == 1]['count'].mean(), color='b', linestyle='dashed', linewidth=2)\n",
    "ax2.hist(train[train['season'] == 2 ]['count'], alpha = .5 )\n",
    "ax2.axvline(train[train['season'] == 2]['count'].mean(), color='b', linestyle='dashed', linewidth=2)\n",
    "ax3.hist(train[train['season'] == 3 ]['count'], alpha = .5)\n",
    "ax3.axvline(train[train['season'] == 3]['count'].mean(), color='b', linestyle='dashed', linewidth=2)\n",
    "ax4.hist(train[train['season'] == 4 ]['count'], alpha = .5 )\n",
    "ax4.axvline(train[train['season'] == 4]['count'].mean(), color='b', linestyle='dashed', linewidth=2)\n",
    "ax1.set_title('spring')\n",
    "ax2.set_title('summer')\n",
    "ax3.set_title('fall')\n",
    "ax4.set_title('winter')\n",
    "plt.xlabel('Count of Bikes')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We next require you to pre-process the categorical and numerical attributes in the data set:\n",
    "\n",
    "- Notice that this data set contains categorical attributes with two or more categories. **Why can't they be directly used as predictors?** Convert these categorical attributes into multiple binary attributes using one-hot encoding: in the place of every categorical attribute $x_j$ that has categories $1, \\ldots, K_j$, introduce $K_j-1$ binary predictors $x_{j1}, \\ldots, x_{j,K_j-1}$ where $x_{jk}$ is 1 whenever $x_j = k$ and 0 otherwise. \n",
    "** Why is it okay to not have a binary column for the $K_j$-th category? **\n",
    "\n",
    "- Since the attributes are in different scales, it is a good practice to standardize the continuous predictors, i.e. to scale each continuous predictor to have zero mean and a standard deviation of 1. This can be done by applying the following transform to each continuous-valued predictor $j$:\n",
    "$\\hat{x}_{ij} = (x_{ij} - \\bar{x}_j) / s_j$, where $\\bar{x}_j$ and $s_j$ are the sample mean and sample standard deviation (SD) of predictor $j$ in the training set. We emphasize that the mean and SD values used for standardization must be estimated using only the training set observations, while the transform is applied to both the training and test sets. \n",
    "** Why shouldn't we include the test set observations in computing the mean and SD? **\n",
    "\n",
    "- Provide a table of the summary statistics of the new attributes (`pd.describe()' function will help).\n",
    "\n",
    "*Hint:* You may use the `pd.get_dummies` function to convert a categorical attribute in a data frame to one-hot encoding. This function creates $K$ binary columns for an attribute with $K$ categories. We suggest that you delete the last (or first) binary column generated by this function.\n",
    "\n",
    "**Note:** We shall use the term \"attribute\" to refer to a categorical column in the data set, and the term \"predictor\" to refer to the individual binary columns resulting out of one-hot encoding."
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 8,
   "metadata": {
    "collapsed": true
   },
=======
   "execution_count": 380,
   "metadata": {},
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
   "outputs": [],
   "source": [
    "# list of all categorical variables and lables for them\n",
    "cat_preds = ['season', 'month', 'day_of_week', 'weather']\n",
    "labels = [['summer', 'fall', 'winter'],['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul','Aug','Sep','Oct','Nov','Dec'], \n",
    "          ['mon', 'tue', 'wed','thu', 'fri','sat'], ['cloud', 'light']]\n",
    "\n",
    "# loop through categorical variables and convert to one-hot encoding\n",
    "for i,pred in enumerate(cat_preds): \n",
    "    dum = pd.get_dummies(train[pred])\n",
    "    del dum [1]\n",
    "    dum.columns = labels[i]\n",
    "    train = train.join(dum)\n",
    "    del train[pred]\n",
    "\n",
    "# Repeat the same process for test data\n",
    "for i,pred in enumerate(cat_preds): \n",
    "    dum = pd.get_dummies(test[pred])\n",
    "    del dum [1]\n",
    "    dum.columns = labels[i]\n",
    "    test = test.join(dum)\n",
    "    del test[pred]\n",
    "    \n",
    "# Mean and STD of continuous preidctors based on trainig set\n",
    "temp_std = train['temp'].std(axis = 0)\n",
    "temp_mean = train['temp'].mean(axis = 0)\n",
    "atemp_std = train['atemp'].std(axis = 0)\n",
    "atemp_mean = train['atemp'].mean(axis = 0)\n",
    "humidity_std = train['humidity'].std(axis = 0)\n",
    "humidity_mean = train['humidity'].mean(axis = 0)\n",
    "wind_std = train['windspeed'].std(axis = 0)\n",
    "wind_mean = train['windspeed'].mean(axis = 0)\n",
    "\n",
    "# normalize training data\n",
    "train['temp'] = (train['temp'] - temp_mean) / temp_std\n",
    "train['atemp'] = (train['atemp'] - atemp_mean) / atemp_std\n",
    "train['humidity'] = (train['humidity'] - humidity_mean) / humidity_std\n",
    "train['windspeed'] = (train['windspeed'] - wind_mean) / wind_std\n",
    "# normalize test data\n",
    "test['temp'] = (test['temp'] - temp_mean) / temp_std\n",
    "test['atemp'] = (test['atemp'] - atemp_mean) / atemp_std\n",
    "test['humidity'] = (test['humidity'] - humidity_mean) / humidity_std\n",
    "test['windspeed'] = (test['windspeed'] - wind_mean) / wind_std"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 9,
=======
   "execution_count": 381,
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>holiday</th>\n",
       "      <th>workingday</th>\n",
       "      <th>temp</th>\n",
       "      <th>atemp</th>\n",
       "      <th>humidity</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>count</th>\n",
       "      <th>summer</th>\n",
       "      <th>fall</th>\n",
       "      <th>winter</th>\n",
       "      <th>Feb</th>\n",
       "      <th>Mar</th>\n",
       "      <th>Apr</th>\n",
       "      <th>May</th>\n",
       "      <th>Jun</th>\n",
       "      <th>Jul</th>\n",
       "      <th>Aug</th>\n",
       "      <th>Sep</th>\n",
       "      <th>Oct</th>\n",
       "      <th>Nov</th>\n",
       "      <th>Dec</th>\n",
       "      <th>mon</th>\n",
       "      <th>tue</th>\n",
       "      <th>wed</th>\n",
       "      <th>thu</th>\n",
       "      <th>fri</th>\n",
       "      <th>sat</th>\n",
       "      <th>cloud</th>\n",
       "      <th>light</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>3.310000e+02</td>\n",
       "      <td>3.310000e+02</td>\n",
       "      <td>3.310000e+02</td>\n",
       "      <td>3.310000e+02</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "      <td>331.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.033233</td>\n",
       "      <td>0.670695</td>\n",
       "      <td>-6.976628e-17</td>\n",
       "      <td>-1.227618e-16</td>\n",
       "      <td>-7.808457e-16</td>\n",
       "      <td>1.543579e-15</td>\n",
       "      <td>4598.447130</td>\n",
       "      <td>0.259819</td>\n",
       "      <td>0.265861</td>\n",
       "      <td>0.256798</td>\n",
       "      <td>0.066465</td>\n",
       "      <td>0.075529</td>\n",
       "      <td>0.078550</td>\n",
       "      <td>0.102719</td>\n",
       "      <td>0.072508</td>\n",
       "      <td>0.093656</td>\n",
       "      <td>0.081571</td>\n",
       "      <td>0.099698</td>\n",
       "      <td>0.090634</td>\n",
       "      <td>0.093656</td>\n",
       "      <td>0.066465</td>\n",
       "      <td>0.160121</td>\n",
       "      <td>0.135952</td>\n",
       "      <td>0.123867</td>\n",
       "      <td>0.123867</td>\n",
       "      <td>0.145015</td>\n",
       "      <td>0.135952</td>\n",
       "      <td>0.329305</td>\n",
       "      <td>0.030211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.179515</td>\n",
       "      <td>0.470672</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>1935.319338</td>\n",
       "      <td>0.439199</td>\n",
       "      <td>0.442459</td>\n",
       "      <td>0.437528</td>\n",
       "      <td>0.249471</td>\n",
       "      <td>0.264643</td>\n",
       "      <td>0.269442</td>\n",
       "      <td>0.304051</td>\n",
       "      <td>0.259719</td>\n",
       "      <td>0.291790</td>\n",
       "      <td>0.274124</td>\n",
       "      <td>0.300050</td>\n",
       "      <td>0.287523</td>\n",
       "      <td>0.291790</td>\n",
       "      <td>0.249471</td>\n",
       "      <td>0.367273</td>\n",
       "      <td>0.343256</td>\n",
       "      <td>0.329929</td>\n",
       "      <td>0.329929</td>\n",
       "      <td>0.352649</td>\n",
       "      <td>0.343256</td>\n",
       "      <td>0.470672</td>\n",
       "      <td>0.171428</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-2.503291e+00</td>\n",
       "      <td>-2.572131e+00</td>\n",
       "      <td>-2.648736e+00</td>\n",
       "      <td>-2.152869e+00</td>\n",
       "      <td>431.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-8.504011e-01</td>\n",
       "      <td>-8.603176e-01</td>\n",
       "      <td>-7.452412e-01</td>\n",
       "      <td>-7.381149e-01</td>\n",
       "      <td>3370.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>8.772587e-02</td>\n",
       "      <td>1.466312e-01</td>\n",
       "      <td>-6.562743e-03</td>\n",
       "      <td>-1.579037e-01</td>\n",
       "      <td>4648.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>8.024892e-01</td>\n",
       "      <td>7.508005e-01</td>\n",
       "      <td>7.055719e-01</td>\n",
       "      <td>5.693478e-01</td>\n",
       "      <td>5981.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.874634e+00</td>\n",
       "      <td>1.959139e+00</td>\n",
       "      <td>2.362380e+00</td>\n",
       "      <td>2.949989e+00</td>\n",
       "      <td>8714.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          holiday  workingday          temp         atemp      humidity     windspeed        count      summer        fall      winter         Feb         Mar         Apr         May         Jun         Jul         Aug         Sep         Oct         Nov         Dec         mon         tue         wed         thu         fri         sat       cloud       light\n",
       "count  331.000000  331.000000  3.310000e+02  3.310000e+02  3.310000e+02  3.310000e+02   331.000000  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000  331.000000\n",
       "mean     0.033233    0.670695 -6.976628e-17 -1.227618e-16 -7.808457e-16  1.543579e-15  4598.447130    0.259819    0.265861    0.256798    0.066465    0.075529    0.078550    0.102719    0.072508    0.093656    0.081571    0.099698    0.090634    0.093656    0.066465    0.160121    0.135952    0.123867    0.123867    0.145015    0.135952    0.329305    0.030211\n",
       "std      0.179515    0.470672  1.000000e+00  1.000000e+00  1.000000e+00  1.000000e+00  1935.319338    0.439199    0.442459    0.437528    0.249471    0.264643    0.269442    0.304051    0.259719    0.291790    0.274124    0.300050    0.287523    0.291790    0.249471    0.367273    0.343256    0.329929    0.329929    0.352649    0.343256    0.470672    0.171428\n",
       "min      0.000000    0.000000 -2.503291e+00 -2.572131e+00 -2.648736e+00 -2.152869e+00   431.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000\n",
       "25%      0.000000    0.000000 -8.504011e-01 -8.603176e-01 -7.452412e-01 -7.381149e-01  3370.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000\n",
       "50%      0.000000    1.000000  8.772587e-02  1.466312e-01 -6.562743e-03 -1.579037e-01  4648.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000\n",
       "75%      0.000000    1.000000  8.024892e-01  7.508005e-01  7.055719e-01  5.693478e-01  5981.000000    1.000000    1.000000    1.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    1.000000    0.000000\n",
       "max      1.000000    1.000000  1.874634e+00  1.959139e+00  2.362380e+00  2.949989e+00  8714.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000"
      ]
     },
<<<<<<< HEAD
     "execution_count": 9,
=======
     "execution_count": 381,
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.describe()"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 10,
=======
   "execution_count": 382,
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>holiday</th>\n",
       "      <th>workingday</th>\n",
       "      <th>temp</th>\n",
       "      <th>atemp</th>\n",
       "      <th>humidity</th>\n",
       "      <th>windspeed</th>\n",
       "      <th>count</th>\n",
       "      <th>summer</th>\n",
       "      <th>fall</th>\n",
       "      <th>winter</th>\n",
       "      <th>Feb</th>\n",
       "      <th>Mar</th>\n",
       "      <th>Apr</th>\n",
       "      <th>May</th>\n",
       "      <th>Jun</th>\n",
       "      <th>Jul</th>\n",
       "      <th>Aug</th>\n",
       "      <th>Sep</th>\n",
       "      <th>Oct</th>\n",
       "      <th>Nov</th>\n",
       "      <th>Dec</th>\n",
       "      <th>mon</th>\n",
       "      <th>tue</th>\n",
       "      <th>wed</th>\n",
       "      <th>thu</th>\n",
       "      <th>fri</th>\n",
       "      <th>sat</th>\n",
       "      <th>cloud</th>\n",
       "      <th>light</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>400.00000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.00000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.00000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.00000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.00000</td>\n",
       "      <td>400.0000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>400.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.02500</td>\n",
       "      <td>0.695000</td>\n",
       "      <td>-0.128713</td>\n",
       "      <td>-0.121217</td>\n",
       "      <td>-0.076029</td>\n",
       "      <td>-0.008111</td>\n",
       "      <td>4514.21250</td>\n",
       "      <td>0.245000</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.232500</td>\n",
       "      <td>0.08750</td>\n",
       "      <td>0.092500</td>\n",
       "      <td>0.085000</td>\n",
       "      <td>0.070000</td>\n",
       "      <td>0.09000</td>\n",
       "      <td>0.077500</td>\n",
       "      <td>0.08750</td>\n",
       "      <td>0.0675</td>\n",
       "      <td>0.080000</td>\n",
       "      <td>0.072500</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>0.130000</td>\n",
       "      <td>0.147500</td>\n",
       "      <td>0.157500</td>\n",
       "      <td>0.157500</td>\n",
       "      <td>0.140000</td>\n",
       "      <td>0.150000</td>\n",
       "      <td>0.345000</td>\n",
       "      <td>0.02750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.15632</td>\n",
       "      <td>0.460984</td>\n",
       "      <td>1.052309</td>\n",
       "      <td>1.061183</td>\n",
       "      <td>0.988182</td>\n",
       "      <td>0.983825</td>\n",
       "      <td>2092.60635</td>\n",
       "      <td>0.430626</td>\n",
       "      <td>0.433555</td>\n",
       "      <td>0.422955</td>\n",
       "      <td>0.28292</td>\n",
       "      <td>0.290093</td>\n",
       "      <td>0.279231</td>\n",
       "      <td>0.255467</td>\n",
       "      <td>0.28654</td>\n",
       "      <td>0.267718</td>\n",
       "      <td>0.28292</td>\n",
       "      <td>0.2512</td>\n",
       "      <td>0.271633</td>\n",
       "      <td>0.259639</td>\n",
       "      <td>0.300376</td>\n",
       "      <td>0.336725</td>\n",
       "      <td>0.355048</td>\n",
       "      <td>0.364728</td>\n",
       "      <td>0.364728</td>\n",
       "      <td>0.347422</td>\n",
       "      <td>0.357519</td>\n",
       "      <td>0.475964</td>\n",
       "      <td>0.16374</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-2.324601</td>\n",
       "      <td>-2.370741</td>\n",
       "      <td>-4.421814</td>\n",
       "      <td>-1.858750</td>\n",
       "      <td>22.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-1.073765</td>\n",
       "      <td>-1.061707</td>\n",
       "      <td>-0.879771</td>\n",
       "      <td>-0.714163</td>\n",
       "      <td>2875.25000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.00000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.180310</td>\n",
       "      <td>-0.155453</td>\n",
       "      <td>-0.092312</td>\n",
       "      <td>-0.098286</td>\n",
       "      <td>4516.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.00000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.802489</td>\n",
       "      <td>0.851495</td>\n",
       "      <td>0.665606</td>\n",
       "      <td>0.534842</td>\n",
       "      <td>6174.75000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.00000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.963980</td>\n",
       "      <td>2.261224</td>\n",
       "      <td>2.202511</td>\n",
       "      <td>4.046877</td>\n",
       "      <td>10045.00000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.00000</td>\n",
       "      <td>1.0000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.00000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         holiday  workingday        temp       atemp    humidity   windspeed        count      summer        fall      winter        Feb         Mar         Apr         May        Jun         Jul        Aug       Sep         Oct         Nov         Dec         mon         tue         wed         thu         fri         sat       cloud      light\n",
       "count  400.00000  400.000000  400.000000  400.000000  400.000000  400.000000    400.00000  400.000000  400.000000  400.000000  400.00000  400.000000  400.000000  400.000000  400.00000  400.000000  400.00000  400.0000  400.000000  400.000000  400.000000  400.000000  400.000000  400.000000  400.000000  400.000000  400.000000  400.000000  400.00000\n",
       "mean     0.02500    0.695000   -0.128713   -0.121217   -0.076029   -0.008111   4514.21250    0.245000    0.250000    0.232500    0.08750    0.092500    0.085000    0.070000    0.09000    0.077500    0.08750    0.0675    0.080000    0.072500    0.100000    0.130000    0.147500    0.157500    0.157500    0.140000    0.150000    0.345000    0.02750\n",
       "std      0.15632    0.460984    1.052309    1.061183    0.988182    0.983825   2092.60635    0.430626    0.433555    0.422955    0.28292    0.290093    0.279231    0.255467    0.28654    0.267718    0.28292    0.2512    0.271633    0.259639    0.300376    0.336725    0.355048    0.364728    0.364728    0.347422    0.357519    0.475964    0.16374\n",
       "min      0.00000    0.000000   -2.324601   -2.370741   -4.421814   -1.858750     22.00000    0.000000    0.000000    0.000000    0.00000    0.000000    0.000000    0.000000    0.00000    0.000000    0.00000    0.0000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.00000\n",
       "25%      0.00000    0.000000   -1.073765   -1.061707   -0.879771   -0.714163   2875.25000    0.000000    0.000000    0.000000    0.00000    0.000000    0.000000    0.000000    0.00000    0.000000    0.00000    0.0000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.00000\n",
       "50%      0.00000    1.000000   -0.180310   -0.155453   -0.092312   -0.098286   4516.00000    0.000000    0.000000    0.000000    0.00000    0.000000    0.000000    0.000000    0.00000    0.000000    0.00000    0.0000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.00000\n",
       "75%      0.00000    1.000000    0.802489    0.851495    0.665606    0.534842   6174.75000    0.000000    0.250000    0.000000    0.00000    0.000000    0.000000    0.000000    0.00000    0.000000    0.00000    0.0000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    0.000000    1.000000    0.00000\n",
       "max      1.00000    1.000000    1.963980    2.261224    2.202511    4.046877  10045.00000    1.000000    1.000000    1.000000    1.00000    1.000000    1.000000    1.000000    1.00000    1.000000    1.00000    1.0000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.000000    1.00000"
      ]
     },
<<<<<<< HEAD
     "execution_count": 10,
=======
     "execution_count": 382,
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test.describe()"
   ]
  },
  {
<<<<<<< HEAD
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
=======
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part (b): Multiple Linear Regression\n",
    "\n",
    "We are now ready to fit a linear regression model and analyze its coefficients and residuals.\n",
    "\n",
    "- Fit a multiple linear regression model to the training set, and report its $R^2$ score on the test set.\n",
    "- *Statistical significance*: Using a t-test, find out which of estimated coefficients are statistically significant at a significance level of 5% (p-value<0.05). Based on the results of the test, answer the following questions:\n",
    "    - Which among the predictors have a positive correlation with the number of bike rentals? \n",
    "    - Does the day of a week have a relationship with bike rentals? \n",
    "    - Does the month influence the bike rentals? \n",
    "    - What effect does a holiday have on  bike rentals? \n",
    "    - Is there a difference in the coefficients assigned to `temp` and `atemp`? Give an explanation for your observation.\n",
    "- *Residual plot:* Make a plot of residuals of the fitted model ${e} = y - \\hat{y}$ as a function of the predicted value $\\hat{y}$. Note that this is different from the residual plot for simple linear regression. Draw a horizontal line denoting the zero residual value on the Y-axis. Does the plot reveal a non-linear relationship between the predictors and response? What does the plot convey about the variance of the error terms?\n"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 52,
=======
   "execution_count": 383,
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>          <td>count</td>      <th>  R-squared:         </th> <td>   0.576</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.538</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   15.25</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Wed, 04 Oct 2017</td> <th>  Prob (F-statistic):</th> <td>6.56e-42</td>\n",
       "</tr>\n",
       "<tr>\n",
<<<<<<< HEAD
       "  <th>Time:</th>                 <td>18:41:29</td>     <th>  Log-Likelihood:    </th> <td> -2832.1</td>\n",
=======
       "  <th>Time:</th>                 <td>20:26:30</td>     <th>  Log-Likelihood:    </th> <td> -2832.1</td>\n",
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>   331</td>      <th>  AIC:               </th> <td>   5720.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>   303</td>      <th>  BIC:               </th> <td>   5827.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>    27</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "       <td></td>         <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th>      <td> 2993.7090</td> <td>  323.116</td> <td>    9.265</td> <td> 0.000</td> <td> 2357.874</td> <td> 3629.544</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>holiday</th>    <td>  279.9598</td> <td>  330.470</td> <td>    0.847</td> <td> 0.398</td> <td> -370.346</td> <td>  930.266</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>workingday</th> <td>  872.4692</td> <td>  202.510</td> <td>    4.308</td> <td> 0.000</td> <td>  473.965</td> <td> 1270.973</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>temp</th>       <td>  925.7338</td> <td>  474.536</td> <td>    1.951</td> <td> 0.052</td> <td>   -8.070</td> <td> 1859.538</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>atemp</th>      <td>  312.4341</td> <td>  429.987</td> <td>    0.727</td> <td> 0.468</td> <td> -533.705</td> <td> 1158.573</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>humidity</th>   <td> -548.4929</td> <td>  113.200</td> <td>   -4.845</td> <td> 0.000</td> <td> -771.251</td> <td> -325.735</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>windspeed</th>  <td> -255.1226</td> <td>   80.766</td> <td>   -3.159</td> <td> 0.002</td> <td> -414.057</td> <td>  -96.189</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>summer</th>     <td>  898.8290</td> <td>  487.802</td> <td>    1.843</td> <td> 0.066</td> <td>  -61.079</td> <td> 1858.737</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>fall</th>       <td> 1032.8816</td> <td>  567.827</td> <td>    1.819</td> <td> 0.070</td> <td>  -84.503</td> <td> 2150.266</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>winter</th>     <td> 1226.1865</td> <td>  506.763</td> <td>    2.420</td> <td> 0.016</td> <td>  228.966</td> <td> 2223.407</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Feb</th>        <td>   88.9401</td> <td>  397.048</td> <td>    0.224</td> <td> 0.823</td> <td> -692.381</td> <td>  870.262</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Mar</th>        <td>  239.1809</td> <td>  446.873</td> <td>    0.535</td> <td> 0.593</td> <td> -640.188</td> <td> 1118.549</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Apr</th>        <td>  333.3491</td> <td>  675.444</td> <td>    0.494</td> <td> 0.622</td> <td> -995.806</td> <td> 1662.504</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>May</th>        <td>  -65.8125</td> <td>  726.311</td> <td>   -0.091</td> <td> 0.928</td> <td>-1495.065</td> <td> 1363.440</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Jun</th>        <td> -792.2629</td> <td>  749.803</td> <td>   -1.057</td> <td> 0.292</td> <td>-2267.744</td> <td>  683.218</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Jul</th>        <td>-1279.9870</td> <td>  816.047</td> <td>   -1.569</td> <td> 0.118</td> <td>-2885.824</td> <td>  325.850</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Aug</th>        <td> -776.4755</td> <td>  794.782</td> <td>   -0.977</td> <td> 0.329</td> <td>-2340.467</td> <td>  787.516</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Sep</th>        <td>  405.1446</td> <td>  694.714</td> <td>    0.583</td> <td> 0.560</td> <td> -961.931</td> <td> 1772.220</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Oct</th>        <td>  486.2509</td> <td>  651.713</td> <td>    0.746</td> <td> 0.456</td> <td> -796.206</td> <td> 1768.708</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Nov</th>        <td>  112.6816</td> <td>  621.610</td> <td>    0.181</td> <td> 0.856</td> <td>-1110.538</td> <td> 1335.902</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Dec</th>        <td> -118.8358</td> <td>  505.353</td> <td>   -0.235</td> <td> 0.814</td> <td>-1113.282</td> <td>  875.611</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>mon</th>        <td>  688.0675</td> <td>  196.838</td> <td>    3.496</td> <td> 0.001</td> <td>  300.724</td> <td> 1075.411</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>tue</th>        <td>  -71.5345</td> <td>  282.049</td> <td>   -0.254</td> <td> 0.800</td> <td> -626.557</td> <td>  483.488</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>wed</th>        <td>  294.2628</td> <td>  288.975</td> <td>    1.018</td> <td> 0.309</td> <td> -274.390</td> <td>  862.916</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>thu</th>        <td>  185.0075</td> <td>  282.022</td> <td>    0.656</td> <td> 0.512</td> <td> -369.962</td> <td>  739.977</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>fri</th>        <td>  234.8184</td> <td>  275.626</td> <td>    0.852</td> <td> 0.395</td> <td> -307.565</td> <td>  777.202</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>sat</th>        <td> 1153.2125</td> <td>  211.048</td> <td>    5.464</td> <td> 0.000</td> <td>  737.907</td> <td> 1568.518</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>cloud</th>      <td>  -16.5666</td> <td>  210.139</td> <td>   -0.079</td> <td> 0.937</td> <td> -430.083</td> <td>  396.949</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>light</th>      <td>-1581.9783</td> <td>  529.223</td> <td>   -2.989</td> <td> 0.003</td> <td>-2623.396</td> <td> -540.560</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>28.947</td> <th>  Durbin-Watson:     </th> <td>   1.912</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td> <th>  Jarque-Bera (JB):  </th> <td>   9.753</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td> 0.054</td> <th>  Prob(JB):          </th> <td> 0.00762</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 2.166</td> <th>  Cond. No.          </th> <td>1.44e+16</td>\n",
       "</tr>\n",
       "</table>"
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:                  count   R-squared:                       0.576\n",
       "Model:                            OLS   Adj. R-squared:                  0.538\n",
       "Method:                 Least Squares   F-statistic:                     15.25\n",
       "Date:                Wed, 04 Oct 2017   Prob (F-statistic):           6.56e-42\n",
<<<<<<< HEAD
       "Time:                        18:41:29   Log-Likelihood:                -2832.1\n",
=======
       "Time:                        20:26:30   Log-Likelihood:                -2832.1\n",
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
       "No. Observations:                 331   AIC:                             5720.\n",
       "Df Residuals:                     303   BIC:                             5827.\n",
       "Df Model:                          27                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const       2993.7090    323.116      9.265      0.000    2357.874    3629.544\n",
       "holiday      279.9598    330.470      0.847      0.398    -370.346     930.266\n",
       "workingday   872.4692    202.510      4.308      0.000     473.965    1270.973\n",
       "temp         925.7338    474.536      1.951      0.052      -8.070    1859.538\n",
       "atemp        312.4341    429.987      0.727      0.468    -533.705    1158.573\n",
       "humidity    -548.4929    113.200     -4.845      0.000    -771.251    -325.735\n",
       "windspeed   -255.1226     80.766     -3.159      0.002    -414.057     -96.189\n",
       "summer       898.8290    487.802      1.843      0.066     -61.079    1858.737\n",
       "fall        1032.8816    567.827      1.819      0.070     -84.503    2150.266\n",
       "winter      1226.1865    506.763      2.420      0.016     228.966    2223.407\n",
       "Feb           88.9401    397.048      0.224      0.823    -692.381     870.262\n",
       "Mar          239.1809    446.873      0.535      0.593    -640.188    1118.549\n",
       "Apr          333.3491    675.444      0.494      0.622    -995.806    1662.504\n",
       "May          -65.8125    726.311     -0.091      0.928   -1495.065    1363.440\n",
       "Jun         -792.2629    749.803     -1.057      0.292   -2267.744     683.218\n",
       "Jul        -1279.9870    816.047     -1.569      0.118   -2885.824     325.850\n",
       "Aug         -776.4755    794.782     -0.977      0.329   -2340.467     787.516\n",
       "Sep          405.1446    694.714      0.583      0.560    -961.931    1772.220\n",
       "Oct          486.2509    651.713      0.746      0.456    -796.206    1768.708\n",
       "Nov          112.6816    621.610      0.181      0.856   -1110.538    1335.902\n",
       "Dec         -118.8358    505.353     -0.235      0.814   -1113.282     875.611\n",
       "mon          688.0675    196.838      3.496      0.001     300.724    1075.411\n",
       "tue          -71.5345    282.049     -0.254      0.800    -626.557     483.488\n",
       "wed          294.2628    288.975      1.018      0.309    -274.390     862.916\n",
       "thu          185.0075    282.022      0.656      0.512    -369.962     739.977\n",
       "fri          234.8184    275.626      0.852      0.395    -307.565     777.202\n",
       "sat         1153.2125    211.048      5.464      0.000     737.907    1568.518\n",
       "cloud        -16.5666    210.139     -0.079      0.937    -430.083     396.949\n",
       "light      -1581.9783    529.223     -2.989      0.003   -2623.396    -540.560\n",
       "==============================================================================\n",
       "Omnibus:                       28.947   Durbin-Watson:                   1.912\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):                9.753\n",
       "Skew:                           0.054   Prob(JB):                      0.00762\n",
       "Kurtosis:                       2.166   Cond. No.                     1.44e+16\n",
       "==============================================================================\n",
       "\n",
       "Warnings:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "[2] The smallest eigenvalue is 3.63e-30. This might indicate that there are\n",
       "strong multicollinearity problems or that the design matrix is singular.\n",
       "\"\"\""
      ]
     },
<<<<<<< HEAD
     "execution_count": 52,
=======
     "execution_count": 383,
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = 0\n",
    "y = train['count']\n",
    "x = list(train.columns)\n",
    "x.remove('count')\n",
    "X = train[x]\n",
    "X = sm.add_constant(X)\n",
    "X_test = test[x]\n",
    "X_test = sm.add_constant(X_test)\n",
    "model = sm.OLS(y, X).fit()\n",
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 53,
=======
   "execution_count": 384,
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R^2 score on test set = 0.249342\n"
     ]
    }
   ],
   "source": [
    "r2_test = r2_score(y_true=test['count'], y_pred= model.predict(X_test))\n",
    "print('R^2 score on test set = %f'%r2_test)"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 54,
=======
   "execution_count": 385,
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['const', 'workingday', 'humidity', 'windspeed', 'winter', 'mon', 'sat', 'light']\n",
      "^ List of statistically significant coefficients according to t-test at a=.05 level\n"
     ]
    }
   ],
   "source": [
    "# Extract all coeficients with p values below .05 and print them\n",
    "print(list(model.pvalues[model.pvalues < .05].axes[0]))\n",
    "print('^ List of statistically significant coefficients according to t-test at a=.05 level')"
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 55,
=======
   "execution_count": 386,
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nkRsYTBERERG5gcEUERERkRsYTBERERG5gcEUERERkRsYTBERERG5gcEUERERkRsYTBERERG5gcEU\nERERkRtYAd0DzHtHV1RU+LglREREJMt83TZfx2UxmPKAS5cuAQBat27t45YQERGRUpcuXYLBYJA+\nXieUhl/klMlkwunTp9G4cWPodDWbiFZUVKB169b4+eefER0d7eMWqo/983+B3kf2z/8Feh/ZP98T\nQuDSpUto2bIlQkLkM6E4MuUBISEhuOWWW2zeFx0drdk3kRrYP/8X6H1k//xfoPeR/fMtJSNSZkxA\nJyIiInIDgykiIiIiN4TOnj17tq8bESxCQ0Nx3333oUGDwJxdZf/8X6D3kf3zf4HeR/bPPzEBnYiI\niMgNnOYjIiIicgODKSIiIiI3MJgiIiIicgODKSIiIiI3MJhy09y5c3H33XcjKioKMTExNo8pKipC\nWloaoqKi0Lx5c0ybNg03btywOmb//v245557EBERgdatW+P111+vd56tW7eiV69eCA8PR8eOHbFy\n5UpPdEmxd955B+3atUNERATuuusu7N6929dNsum7777DI488gpYtW0Kn0+Grr76yul8IgZkzZyI+\nPh6RkZFISUnBsWPHrI65du0a0tPT0bRpUzRq1AiPP/44zpw5Y3XMhQsXMGLECERHRyMmJgZjx47F\n5cuXPd6/efPm4X/+53/QuHFjNG/eHI8++iiOHj0aMH1cunQpbr/9dkvBv+TkZHzzzTcB0Tdb5s+f\nD51Oh+eff95ym7/3cfbs2dDpdFZfnTt3Dpj+AUBxcTGeeuopNG3aFJGRkejWrRt++OGHgOlju3bt\n6r2GOp0O6enpAdE/lwlyy8yZM8Wbb74ppkyZIgwGQ737b9y4IZKSkkRKSorYu3ev+Prrr0VcXJx4\n4YUXLMeUl5eLFi1aiBEjRoj8/HyxevVqERkZKd577z3LMSdOnBBRUVFiypQp4tChQ+Jvf/ubCA0N\nFVlZWV7ppz1r1qwRer1efPTRR+LgwYNi/PjxIiYmRpw5c8an7bLl66+/Fi+++KJYu3atACC+/PJL\nq/vnz58vDAaD+Oqrr8S+ffvE4MGDRUJCgrh69arlmAkTJojWrVuLnJwc8cMPP4g+ffqIu+++2+o8\ngwYNEt27dxc7d+4U//73v0XHjh3FsGHDPN6/1NRUsWLFCpGfny/y8vLEQw89JNq0aSMuX74cEH1c\n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\n",
      "text/plain": [
<<<<<<< HEAD
       "<matplotlib.figure.Figure at 0x11982e438>"
=======
       "<matplotlib.figure.Figure at 0x129106c50>"
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "e = y - model.predict()\n",
    "plt.scatter(model.predict(), e)\n",
    "plt.title('Residuals as a function of y_hat')\n",
    "plt.ylabel('Residual value')\n",
    "plt.xlabel('y_hat')\n",
    "plt.axhline(linestyle = \"--\", alpha = .5)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part (c): Checking Collinearity\n",
    "\n",
    "Does the data suffer from multi-collinearity? To answer this question, let us first analyze the correlation matrix for the data. Compute the (Pearson product-moment) correlation matrix for the predictor variables in the training set, and visualize the matrix using a heatmap. For categorical attributes, you should use each binary predictor resulting from one-hot encoding to compute their correlations.  Are there predictors that fall into natural groups based on the correlation values? \n",
    "\n",
    "*Hint:* You may use the `np.corrcoef` function to compute the correlation matrix for a data set (do not forget to transpose the data matrix). You may use `plt.pcolor` function to visualize the correlation matrix."
   ]
  },
  {
   "cell_type": "code",
<<<<<<< HEAD
   "execution_count": 56,
   "metadata": {},
   "outputs": [],
=======
   "execution_count": 327,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\nAABgEUoeAAAAAFiEkgcAAAAAFqHkAQAAAIBFKHkAAAAAYBFKHgAAAABYhJIHAAAAABah5AEAAACA\nRSh5AAAAAGARSh4AAAAAWISSBwAAAAAWoeQBAAAAgEUoeQAAAABgEUoeAAAAAFiEkgcAAAAAFqHk\nAQAAAIBFKHmVxOFwKDMz09/DAAAAABBgKHkAAAAAYBFK3iUsXLhQLVq0UNWqVVWrVi1169ZNp06d\n0saNG9W9e3fVrl1bERER6tKliz7//HPvfjExMZKkfv36yeFweJcBAAAAoLJR8kpx6NAh3XvvvRo6\ndKi2b9+urKws9e/fX8XFxTp58qSSk5O1Zs0affbZZ4qLi1OvXr108uRJSdLGjRslSa+88ooOHTrk\nXS6Jx+OR2+32uQEAAABAeYX4ewC/VocOHVJhYaH69++vRo0aSZJatGghSUpKSvLZ9q9//asiIyO1\natUq9enTR1FRUZKkyMhIRUdHXzInPT1daWlplTCDsileNdho3uQsc1n5+eay/JG3aZO5rCNHzGVJ\nUkKC2bzjx81lxcaay5KkggKzeQsWmMsy/bjs1s1s3pdfmsuqXt1clj/yTP5+Liw0lyVJtWubzTM5\nP9NfS9sl73MYy3r1N8XGsiRpkuHnDcuWmcs6c6Z8+3EmrxStWrVS165d1aJFC915552aM2eOjh07\nJkn65ptvNHz4cMXFxSkiIkLh4eHKz8/X/v37rzgnNTVVJ06c8N5yc3MreioAAAAAAgglrxTBwcFa\nvny5li5dquuuu04vvviimjZtqn379ik5OVnZ2dmaMWOGPv30U2VnZ6tWrVo6ffr0Fec4nU6Fh4f7\n3AAAAACgvCh5l+BwONSxY0elpaXpiy++UGhoqBYtWqS1a9dq1KhR6tWrl66//no5nU4dueC6oSpV\nqujs2bN+GjkAAACAQMV78kqxfv16rVy5Ur/97W91zTXXaP369fr222/VrFkzxcXF6fXXX1ebNm3k\ndrv1xz/+UVWrVvXZPyYmRitXrlTHjh3ldDpVs2ZNP80EAAAAQCDhTF4pwsPD9cknn6hXr15q0qSJ\nnn76aU2bNk233Xab5s6dq2PHjql169a6//77NWrUKF1zzTU++0+bNk3Lly+Xy+XSDTfc4KdZAAAA\nAAg0nMkrRbNmzbSslI/OueGGGy76bxEGDhzos3z77bfr9ttvr7TxAQAAAEBJOJMHAAAAABah5AEA\n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\nfw/g1+bo0aP68MMPNWXKFFWtWtXnvujoaA0aNEhvv/22Zs+ercGDB2vdunWaOXOmWrVqpf379+ub\nb76Ry+XSe++9pwEDBmjnzp0KDw+/6Fg/8Xg88ng83mW3212p8wMAAABgN0reBXbv3q3i4mI1a9as\nxPubNWumY8eOaePGjXrnnXe0fPlydevWTZLUuHFj73ZXX321JOmaa65RZGRkqXnp6elKS0u7aH1h\n4Y+3yhYfX/kZ5xs88HtzYSFmH955x0ON5lWvbi7LxGPxfO6/vWM0b17+LnNhi81FSea/dybzbJ6b\nP/JM6rjcYTRvbfdic2EWf98k6csvzWVd4ulTpbjvPrN5mZlm88LCzGXl55vLkqTPPjObFxtrLqug\noHz7cblmKYqLL/0HIScnR8HBwerSpcsvyklNTdWJEye8t9zc3F90PAAAAACBjZJ3gdjYWDkcDm3f\nvr3E+7dv366aNWuWevnllXI6nQoPD/e5AQAAAEB5UfIuUKtWLXXv3l2zZ8/WDz/84HPf4cOHNX/+\nfN19991q0aKFioqKtGrVqhKPExr646V7Z8+erfQxAwAAAMBPKHklmDVrljwej3r06KFPPvlEubm5\nWrZsmbp376769etrypQpiomJUXJysoYOHarMzEzt27dPWVlZeuedH99L1KhRIzkcDi1evFjffvut\n8k1fnAwAAAAgIFHyShAXF6dNmzapcePGuuuuu3TttdfqwQcf1K233qp169Z5P1TlpZde0sCBA/XI\nI48oPj5ew4cP16lTpyRJ9evXV1pamsaOHas6depoxIgR/pwSAAAAgADBp2uWolGjRsrIyLjkNmFh\nYfrLX/6iv/zlLyXeP378eI0fP74SRgcAAAAAJeNMHgAAAABYhJIHAAAAABah5AEAAACARSh5AAAA\nAGARSh4AAAAAWISSBwAAAAAWoeQBAAAAgEUoeQAAAABgEUoeAAAAAFiEkgcAAAAAFqHkAQAAAIBF\nKHkAAAAAYBFKHgAAAABYhJIHAAAAABah5AEAAACARSh5AAAAAGARSt55vv32Wz388MNq2LChnE6n\noqOj1aNHD61du9bfQwMAAACAMgnx9wB+TQYMGKDTp0/r1VdfVePGjfXNN99o5cqV+u677/w9NAAA\nAAAoE87knXP8+HGtXr1azz//vG699VY1atRI7dq1U2pqqv7jP/7Du82wYcMUFRWl8PBwJSUlacuW\n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\nzOYVFtqbd9NSh7kwSZtvLzaaV5BvLsv070vTPwem52czk9+75s3NZUlSZKTZvOPHzeatWGEuKzra\nXJYkxcaazcvKMpd1+nT59uNMXgVr2fLnEnPVVVcpPDxceXl5pW6fmpqqEydOeG+5ubkmhgkAAADA\nUry2VUZBQUEqLvZ9FffMmTMXbVelShWfZYfDoaKiolKP63Q65XQ6K2aQAAAAAAIeZ/LKKCoqSocO\nHfIuu91u7du3z48jAgAAAICLUfLKKCkpSa+//rpWr16tbdu2KTk5WcHBwf4eFgAAAAD44HLNSygq\nKlLIuXdrp6amat++ferTp48iIiL0zDPPcCYPAAAAwK8OJe8S8vLyFHvu43rCw8O1YMECn/uTk5N9\nli98z54kHTf90UkAAAAAAhqXa5bg2LFjWrx4sbKystStWzd/DwcAAAAAyowzeSUYOnSoNm7cqMce\ne0x33HGHv4cDAAAAAGVGySvBokWL/D0EAAAAACgXLtcEAAAAAItQ8gAAAADAIpQ8AAAAALAIJQ8A\nAAAALELJAwAAAACLUPIAAAAAwCKUPAAAAACwCCUPAAAAACxCyQMAAAAAi1DyAAAAAMAilDwAAAAA\nsAglDwAAAAAsQskDAAAAAIsEfMlLSUmRw+HQ7373u4vu+/3vfy+Hw6GUlBTzAwMAAACAcgj4kidJ\nLpdLCxYs0A8//OBdV1BQoDfffFMNGzb048gAAAAA4MpQ8iS1bt1aLpdLf//7373r/v73v6thw4a6\n4YYbvOuWLVumTp06KTIyUrVq1VKfPn20d+9e7/1JSUkaMWKEz7G//fZbhYaGauXKlZU/EQAAAAAB\nj5J3ztChQ/XKK694l+fNm6chQ4b4bHPq1CmNGTNGmzZt0sqVKxUUFKR+/fqpqKhIkjRs2DC9+eab\n8ng83n3eeOMN1a9fX0lJSSXmejweud1unxsAAAAAlBcl75z77rtPa9as0b///W/9+9//1tq1a3Xf\nfff5bDNgwAD1799fsbGxSkhI0Lx587Rt2zb961//kiT1799fkvT+++9798nIyPC+768k6enpioiI\n8N5cLlclzRAAAABAIAjx9wB+LaKiotS7d29lZGSouLhYvXv3Vu3atX222b17tyZMmKD169fryJEj\n3jN4+/fvV/PmzRUWFqb7779f8+bN01133aXPP/9cX375pf7xj3+UmpuamqoxY8Z4l91ut1wul/Ly\npLCwypnr+ZYtq/yM823aZC4rxPJH93PPGQz7MsFgmBS5x2ic0ceK6cel6bzr3y35Ba3KsP62YmNZ\nklTdwO9kf7H996XN8zM9t/h4c1mmn6McP24278gRs3kxMeayBg40lyVJK1aYzbvnHnNZp05J8+df\n+X4W/9q7ckOHDvW+p+6///u/L7r/9ttvV6NGjTRnzhzVq1dPRUVFat68uU6fPu3dZtiwYUpISNCB\nAwf0yiuvKCkpSY0aNSo10+l0yul0VvxkAAAAAAQkSt55evbsqdOnT8vhcKhHjx4+93333XfauXOn\n5syZo1tuuUWStGbNmouO0aJFC7Vp00Zz5szRm2++qVmzZhkZOwAAAABIlDwfwcHB2r59u/ff56tZ\ns6Zq1aqlv/71r6pbt67279+vsWPHlnicYcOGacSIEbrqqqvUr1+/Sh83AAAAAPyED165QHh4uMLD\nwy9aHxQUpAULFmjz5s1q3ry5Hn300f/P3r1HRV0n/h9/jVwGFAUFFEgULQRNUdRKV5GpLM3LlpW6\nlhoplZ1MEbV0K4Vyw7Y1tfxmZQqu6655WnOLVrZf5lCa4hXLNE1bF7c1yVIQTUSY3x9ts06AV3ij\nH5+Pc+YcPtfX+zMO6MvPBb344otV7mPYsGHy9vbWsGHD5GfixjoAAAAA+K+r/kxeVlbWWZevXLnS\n/XXv3r3dT9L8mctV+cb/w4cP6+TJkxo9enSNjBEAAAAAztdVX/JqUllZmb7//ns9/fTT6tatmzp3\n7lzXQwIAAABwleFyzRq0bt06hYeHa9OmTXrttdfqejgAAAAArkKcyatBDoejyss3AQAAAMAUzuQB\nAAAAgIVQ8gAAAADAQih5AAAAAGAhlDwAAAAAsBBKHgAAAABYCCUPAAAAACyEkgcAAAAAFkLJAwAA\nAAALoeQBAAAAgIVQ8gAAAADAQih5AAAAAGAhlDwAAAAAsBBKHgAAAABYCCUPAAAAACyEkleN9evX\ny8vLS/3796/roQAAAADAeaPkVWPhwoV6/PHH9fHHH+s///nPJe2rvLxcFRUVNTQyAAAAAKgeJa8K\nJSUleuutt/Too4+qf//+ysrKci9zOp2y2Wx6//33FRcXJz8/P3Xr1k07duxwr5OVlaWgoCC9++67\nateunex2uwoKCurgSAAAAABcbSh5VVi+fLliY2MVExOj4cOHa9GiRXK5XB7rTJ48WbNmzdKmTZsU\nGhqqgQMHqqyszL38xIkTeuGFF/Tmm2/qiy++UNOmTavMKi0tVXFxsccLAAAAAC6Wd10P4HK0cOFC\nDR8+XJLUt29fFRUVKTc3Vw6Hw73O9OnTddttt0mSFi9erObNm+udd97RkCFDJEllZWV69dVX1bFj\nx7NmZWRkKD09vdL8PXskX98aOqCzSE6u/YwzjRljLsvb8Ke7Z0+zed9+ay7LOeljc2GSvMcajTPK\n9Ocy5i82o3lfDHade6Ua4n3SWBRqmOnvA5N5p0+by5LMv5d795rL6trVXJYkbdhgNq99e7N5AQHm\nslauNJclmf8++PJLc1knL/LvOs7k/cLu3bu1ceNGDRs2TJLk7e2toUOHauHChR7rde/e3f11kyZN\nFBMTo127drnn+fr6Ki4u7px5U6dOVVFRkft14MCBGjoSAAAAAFcjzuT9wsKFC3X69GlFRES457lc\nLtntds2bN++89+Pv7y+b7dz/g26322W32y9qrAAAAADwS5zJO8Pp06f1xz/+UbNmzVJ+fr77tX37\ndkVEROgvf/mLe90NZ5zTP3LkiPbs2aO2bdvWxbABAAAAwI0zeWfIzs7WkSNHNHr0aAUGBnosu+ee\ne7Rw4UK9+OKLkqRnn31WwcHBatasmZ566imFhITorrvuqothAwAAAIAbZ/LOsHDhQvXu3btSwZN+\nKnmbN2/WZ599JkmaOXOmxo8fry5duujbb7/Ve++9J18TT0oBAAAAgLPgTN4Z3nvvvWqX3XjjjXK5\nXHI6nZKknj17evxuvDMlJSUpKSmpFkYIAAAAAGfHmTwAAAAAsBBKHgAAAABYCJdrXiCHwyGXy9wv\n+wUAAACAC8GZPAAAAACwEEoeAAAAAFgIJQ8AAAAALISSBwAAAAAWQskDAAAAAAuh5AEAAACAhVDy\nAAAAAMBCKHkAAAAAYCGUPAAAAACwEEoeAAAAAFgIJQ8AAAAALISSBwAAAAAWQskDAAAAAAuh5P1X\nUlKSbDabxowZU2nZY489JpvNpqSkJPMDAwAAAIALQMk7Q2RkpJYtW6Yff/zRPe/kyZP685//rBYt\nWlzSvsvKyi51eAAAAABwTpS8M3Tu3FmRkZFasWKFe96KFSvUokULxcfHu+fl5OSoZ8+eCgoKUnBw\nsAYMGKB9+/a5l+/fv182m01vvfWWEhMT5efnp6VLlxo9FgAAAABXJ0reL4waNUqZmZnu6UWLFunB\nBx/0WOf48eNKTU3V5s2btXr1atWrV0+DBg1SRUWFx3pTpkzR+PHjtWvXLvXp06fKvNLSUhUXF3u8\nAO//7CUAACAASURBVAAAAOBiedf1AC43w4cP19SpU/Wvf/1LkrRu3TotW7ZMTqfTvc4999zjsc2i\nRYsUGhqqnTt3qn379u75KSkpuvvuu8+al5GRofT09Jo7AAAAAABXNUreL4SGhqp///7KysqSy+VS\n//79FRIS4rHOV199pWnTpikvL0+HDx92n8ErKCjwKHldu3Y9Z97UqVOVmprqni4uLlZkZKQ6dJD8\n/WvooM7C2/An4MiRb8wGGrR//zVG80z+2U2aZC5LMv+5NJkX8xebuTBJu4e5jObptLkoK39OTOeZ\nPjYrs/LnRJJKSsxl7d9vLkuSBgwwm/fhh2bzfvHP2Vp19Ki5LMnssUnSl1+ayzp16uK248d6FUaN\nGqWxY8dKkv7v//6v0vKBAweqZcuWWrBggSIiIlRRUaH27dvr1C/+FBo0aHDOLLvdLrvdXjMDBwAA\nAHDVo+RVoW/fvjp16pRsNlule+m+//577d69WwsWLFBCQoIkae3atXUxTAAAAACohJJXBS8vL+3a\ntcv99ZkaN26s4OBgvfHGGwoPD1dBQYGmTJlSF8MEAAAAgEp4umY1GjVqpEaNGlWaX69ePS1btkxb\ntmxR+/btNWHCBL344ot1MEIAAAAAqIwzef+VlZV11uUrV650f927d2/t3LnTY7nL9b+HG0RFRXlM\nAwAAAIApnMkDAAAAAAuh5AEAAACAhVDyAAAAAMBCKHkAAAAAYCGUPAAAAACwEEoeAAAAAFgIJQ8A\nAAAALISSBwAAAAAWQskDAAAAAAuh5AEAAACAhVDyAAAAAMBCKHkAAAAAYCGUPAAAAACwEEoeAAAA\nAFgIJQ8AAAAALISSBwAAAAAWQsmrIU6nUzabTUePHq3roQAAAAC4ilHyzpCUlCSbzVbptXfv3roe\nGgAAAACcF++6HsDlpm/fvsrMzPSYFxoaWkejAQAAAIALw5m8X7Db7QoLC/N4eXl5qaKiQhkZGWrV\nqpX8/f3VsWNHvf3225W2X7duneLi4uTn56du3bppx44ddXAUAAAAAK5WlLzzlJGRoT/+8Y967bXX\n9MUXX2jChAkaPny4cnNzPdabPHmyZs2apU2bNik0NFQDBw5UWVlZtfstLS1VcXGxxwsAAAAALhaX\na/5Cdna2AgIC3NN33HGH/vSnP+n555/Xhx9+qO7du0uSWrdurbVr1+r1119XYmKie/3p06frtttu\nkyQtXrxYzZs31zvvvKMhQ4ZUmZeRkaH09PRK80tLJZutJo+sahs21H6Gp2BjST4+fsayJOnDD43G\nqWdPc1lfffWpuTBJUrnRtDT1Mpa1NNplLEuSTq41GmfU4cNm88LCzOaZfI6Xn9kfl5oxw2zeqJlt\nzIWdPGkuSzL+F/m7myOMZZl+JMJawz8vr7vObJ7J99PbcMMICTGbFxtrLuvECWnhwgvfjpL3Czff\nfLPmz5/vnm7QoIH27t2rEydOuMvbz06dOqX4+HiPeT+XQElq0qSJYmJitGvXrmrzpk6dqtTUVPd0\ncXGxIiMjL/UwAAAAAFylKHm/0KBBA133i/9aKSgokCS9//77uuaaazyW2e32S8qz2+2XvA8AAAAA\n+Bkl7zy0a9dOdrtdBQUFHpdmVmXDhg1q0aKFJOnIkSPas2eP2rZta2KYAAAAAEDJOx8NGzbUpEmT\nNGHCBFVUVKhnz54qKirSunXr1KhRIz3wwAPudZ999lkFBwerWbNmeuqppxQSEqK77rqrDkcPAAAA\n4GpCyTtPzz33nEJDQ5WRkaGvv/5aQUFB6ty5s3772996rDdz5kyNHz9eX331lTp16qT33ntPvr6+\ndTRqAAAAAFcbSt4ZsrKyql1ms9k0fvx4jR8/vsrlDodDLtdPT80bMGBAbQwPAAAAAM6J35MHAAAA\nABZCyQMAAAAAC6HkAQAAAICFUPIAAAAAwEIoeQAAAABgIZQ8AAAAALAQSh4AAAAAWAglDwAAAAAs\nhJIHAAAAABZCyQMAAAAAC6HkAQAAAICFUPIAAAAAwEIoeQAAAABgIZQ8AAAAALAQSh4AAAAAWMhV\nVfKysrIUFBRU18MAAAAAgFpzVZW8oUOHas+ePRe0jcPhUEpKSi2NCAAAAABqlnddD8Akf39/+fv7\n10n2qVOn5OvrWyfZAAAAAK4eV/yZvOzsbAUFBam8vFySlJ+fL5vNpilTprjXSU5O1vDhwytdrpmW\nlqZOnTppyZIlioqKUmBgoH7zm9/o2LFjkqSkpCTl5uZq7ty5stlsstls2r9/vyRpx44duuOOOxQQ\nEKBmzZppxIgROnz4sHvfDodDY8eOVUpKikJCQtSnTx8D7wYAAACAq90VX/ISEhJ07Ngxbdu2TZKU\nm5urkJAQOZ1O9zq5ublyOBxVbr9v3z6tXLlS2dnZys7OVm5urmbOnClJmjt3rrp3766HHnpIBw8e\n1MGDBxUZGamjR4/qlltuUXx8vDZv3qycnBwdOnRIQ4YM8dj34sWL5evrq3Xr1um1116rMr+0tFTF\nxcUeLwAAAAC4WFd8yQsMDFSnTp3cpc7pdGrChAnatm2bSkpK9M0332jv3r1KTEyscvuKigplZWWp\nffv2SkhI0IgRI7R69Wr3vn19fVW/fn2FhYUpLCxMXl5emjdvnuLj4/X8888rNjZW8fHxWrRokdas\nWeNxz190dLR+//vfKyYmRjExMVXmZ2RkKDAw0P2KjIys2TcIAAAAwFXFEvfkJSYmyul0auLEifrk\nk0+UkZGh5cuXa+3atfrhhx8UERGh6OhorVu3rtK2UVFRatiwoXs6PDxchYWFZ83bvn271qxZo4CA\ngErL9u3bpzZt2kiSunTpcs6xT506Vampqe7p4uJiRUZG6ptvJLv9nJtfsqio2s84U6HM3RNZv8xY\nlCRp6dsuo3lVfPxqUbnJMKWpl+G8j41ltTptLKpOnLbw8Zl+Bte4eW3MhYWFmcuSpICxRuOaHL6w\nh65dCtPfAyE9zeaNGWMu68svzWVJUu/eZvNMH5/Jf/MdPWouS5LefNNsnsnPSmnpxW1niZLncDi0\naNEibd++XT4+PoqNjZXD4ZDT6dSRI0eqPYsnST4+Ph7TNptNFRUVZ80rKSnRwIED9cILL1RaFh4e\n7v66QYMG5xy73W6X3USbAwAAAHBVsETJ+/m+vNmzZ7sLncPh0MyZM3XkyBFNnDjxovft6+vrfqjL\nzzp37qy//vWvioqKkre3Jd5CAAAAABZxxd+TJ0mNGzdWXFycli5d6n7ASq9evbR161bt2bPnrGfy\nziUqKkp5eXnav3+/Dh8+rIqKCj322GP64YcfNGzYMG3atEn79u3TP/7xDz344IOVCiEAAAAAmGSJ\nkif9dF9eeXm5u+Q1adJE7dq1U1hYWLUPPTkfkyZNkpeXl9q1a6fQ0FAVFBQoIiJC69atU3l5uW6/\n/XZ16NBBKSkpCgoKUr16lnlLAQAAAFyBLHOt4Zw5czRnzhyPefn5+R7TSUlJSkpKck+npaUpLS3N\nY52UlBSlnHF3fZs2bbR+/fpKedHR0VqxYkW14znzVzgAAAAAgCmcdgIAAAAAC6HkAQAAAICFUPIA\nAAAAwEIoeQAAAABgIZQ8AAAAALAQSh4AAAAAWAglDwAAAAAshJIHAAAAABZCyQMAAAAAC6HkAQAA\nAICFUPIAAAAAwEIoeQAAAABgIZQ8AAAAALAQSh4AAAAAWAglDwAAAAAshJJ3Fi6XSw8//LCaNGki\nm82m/Pz8s66/f/9+j/WcTqdsNpuOHj1qYrgAAAAAIO+6HsDlLCcnR1lZWXI6nWrdurVCQkLqekgA\nAAAAcFaUvLPYt2+fwsPD9atf/aquhwIAAAAA54XLNauRlJSkxx9/XAUFBbLZbIqKilJOTo569uyp\noKAgBQcHa8CAAdq3b19dDxUAAAAA3Ch51Zg7d66effZZNW/eXAcPHtSmTZt0/PhxpaamavPmzVq9\nerXq1aunQYMGqaKioq6HCwAAAACSuFyzWoGBgWrYsKG8vLwUFhYmSbrnnns81lm0aJFCQ0O1c+dO\ntW/f/qJySktLVVpa6p4uLi6++EEDAAAAuOpR8i7AV199pWnTpikvL0+HDx92n8ErKCi46JKXkZGh\n9PT0SvOvuUby87uk4Z4Xb8OfgGP7XMayfjR8bF/OMZv32mvmst7r0stcmKQ0fWw0T/IylmT6e26O\n4c/lr/9g8LNyjice17hO2UbjmhzeYyzLr8RYlCSpJNlsnsnvO9Pf46bz9u83l9W7t7ksSdq712xe\nUJDZPJM/Mjt1MpclScmGf6acPHn5Z3G55gUYOHCgfvjhBy1YsEB5eXnKy8uTJJ06deqi9zl16lQV\nFRW5XwcOHKip4QIAAAC4CnEm7zx9//332r17txYsWKCEhARJ0tq1ay95v3a7XXa7/ZL3AwAAAAAS\nJe+8NW7cWMHBwXrjjTcUHh6ugoICTZkypa6HBQAAAAAeuFzzPNWrV0/Lli3Tli1b1L59e02YMEEv\nvvhiXQ8LAAAAADxwJu8sUlJSlJKS4p7u3bu3du7c6bGOy/W/B4lERUV5TDscDo9pAAAAAKhtnMkD\nAAAAAAuh5AEAAACAhVDyAAAAAMBCKHkAAAAAYCGUPAAAAACwEEoeAAAAAFgIJQ8AAAAALISSBwAA\nAAAWQskDAAAAAAuh5AEAAACAhVDyAAAAAMBCKHkAAAAAYCGUPAAAAACwEEoeAAAAAFgIJQ8AAAAA\nLISSBwAAAAAWQskDAAAAAAuh5AEAAACAhVDyDCkvL1dFRUVdDwMAAACAxV12Je/tt99Whw4d5O/v\nr+DgYPXu3VvHjx+Xw+FQSkqKx7p33XWXkpKS3NNRUVGaMWOGRo4cqYCAALVs2VLvvvuuvvvuO915\n550KCAhQXFycNm/e7N4mKytLQUFBys7OVkxMjOrXr697771XJ06c0OLFixUVFaXGjRtr3LhxKi8v\nd29XWlqqSZMm6ZprrlGDBg100003yel0Vtrvu+++q3bt2slut6ugoKDW3jcAAAAAkC6zknfw4EEN\nGzZMo0aN0q5du+R0OnX33XfL5XKd9z5mz56tHj16aNu2berfv79GjBihkSNHavjw4dq6dauuvfZa\njRw50mOfJ06c0Msvv6xly5YpJydHTqdTgwYN0t///nf9/e9/15IlS/T666/r7bffdm8zduxYrV+/\nXsuWLdNnn32mwYMHq2/fvvrqq6889vvCCy/ozTff1BdffKGmTZtWGm9paamKi4s9XgAAAABwsbzr\negBnOnjwoE6fPq27775bLVu2lCR16NDhgvbRr18/PfLII5KkadOmaf78+brhhhs0ePBgSdKTTz6p\n7t2769ChQwoLC5MklZWVaf78+br22mslSffee6+WLFmiQ4cOKSAgQO3atdPNN9+sNWvWaOjQoSoo\nKFBmZqYKCgoUEREhSZo0aZJycnKUmZmp559/3r3fV199VR07dqx2vBkZGUpPT7+gYwQAAACA6lxW\nJa9jx4669dZb1aFDB/Xp00e333677r33XjVu3Pi89xEXF+f+ulmzZpI8i+LP8woLC90lr379+u6C\n9/M6UVFRCggI8JhXWFgoSfr8889VXl6uNm3aeGSXlpYqODjYPe3r6+sxnqpMnTpVqamp7uni4mJF\nRkaqqEg6efL8jvlSlJTUfsaZBgwwl2X62A4cMPAHdobA2f7GsgZuOf+z6TXh/TFG44x+VrKzzWVJ\n0unTZvOKsz82ljVlirEoSVL7HWbzevc2l3XddeayJOmMuxuMMPk9fsZdJEZ8+aXZvObNzeaZdPSo\n2bxvvzWbFxJiLuu//8Q2Zu9es3lRUeayTpy4uO0uq5Ln5eWl//f//p8+/fRTffDBB3rllVf01FNP\nKS8vT/Xq1at02WZZWVmlffj4+Li/ttls1c478yEoZy7/eZ2q5v28TUlJiby8vLRlyxZ5eXl5rHdm\nMfT393fnVcdut8tut591HQAAAAA4X5dVyZN+KlM9evRQjx49NG3aNLVs2VLvvPOOQkNDdfDgQfd6\n5eXl2rFjh26++WbjY4yPj1d5ebkKCwuVkJBgPB8AAAAAqnNZlby8vDytXr1at99+u5o2baq8vDx9\n9913atu2rRo0aKDU1FS9//77uvbaa/XSSy/pqOnz6v/Vpk0b3X///Ro5cqRmzZql+Ph4fffdd1q9\nerXi4uLUv3//OhkXAAAAAFxWJa9Ro0b6+OOPNWfOHBUXF6tly5aaNWuW7rjjDpWVlWn79u0aOXKk\nvL29NWHChDo5i/ezzMxMzZgxQxMnTtQ333yjkJAQdevWTQNM3nQGAAAAAL9gc13I7ydArSsuLlZg\nYKCeeKJIdnujWs8z/XCSnBxzWVZ/8EqarPvglTE8eKXGmH7wismb7Y0/eKW92TyTDyfhwSs1x+oP\nXjH5wAmTWZJ0xq9RNsLEA/bOZPLBK127msuSrP7glWKNGBGooqIiNWp0/t3gsvo9eQAAAACAS0PJ\nAwAAAAALoeQBAAAAgIVQ8gAAAADAQih5AAAAAGAhlDwAAAAAsBBKHgAAAABYCCUPAAAAACyEkgcA\nAAAAFkLJAwAAAAALoeQBAAAAgIVQ8gAAAADAQih5AAAAAGAhlDwAAAAAsBBKHgAAAABYiPGSl5WV\npaCgoEvej8PhUEpKSg2MqHZFRUVpzpw5dT0MAAAAAFcJ4yVv6NCh2rNnj+lYAAAAALgqeJsO9Pf3\nl7+/v+lYAAAAALgq1MiZvOzsbAUFBam8vFySlJ+fL5vNpilTprjXSU5O1vDhwytdrpmWlqZOnTpp\nyZIlioqKUmBgoH7zm9/o2LFj7nWOHz+ukSNHKiAgQOHh4Zo1a1alMbz66quKjo6Wn5+fmjVrpnvv\nvde9zOFwaOzYsRo7dqwCAwMVEhKiZ555Ri6Xy71OaWmpJk2apGuuuUYNGjTQTTfdJKfT6ZGxdu1a\nJSQkyN/fX5GRkRo3bpyOHz/uXl5YWKiBAwfK399frVq10tKlSy/+TQUAAACAi1AjJS8hIUHHjh3T\ntm3bJEm5ubkKCQnxKEm5ublyOBxVbr9v3z6tXLlS2dnZys7OVm5urmbOnOlePnnyZOXm5upvf/ub\nPvjgAzmdTm3dutW9fPPmzRo3bpyeffZZ7d69Wzk5OerVq5dHxuLFi+Xt7a2NGzdq7ty5eumll/Tm\nm2+6l48dO1br16/XsmXL9Nlnn2nw4MHq27evvvrqK/cY+/btq3vuuUefffaZ3nrrLa1du1Zjx451\n7yMpKUkHDhzQmjVr9Pbbb+vVV19VYWHhRb+vAAAAAHChauRyzcDAQHXq1ElOp1Ndu3aV0+nUhAkT\nlJ6erpKSEhUVFWnv3r1KTEzUunXrKm1fUVGhrKwsNWzYUJI0YsQIrV69Wr/73e9UUlKihQsX6k9/\n+pNuvfVWST8VtubNm7u3LygoUIMGDTRgwAA1bNhQLVu2VHx8vEdGZGSkZs+eLZvNppiYGH3++eea\nPXu2HnroIRUUFCgzM1MFBQWKiIiQJE2aNEk5OTnKzMzU888/r4yMDN1///3uh71ER0fr5ZdfVmJi\noubPn6+CggKtWrVKGzdu1A033CBJWrhwodq2bXvW9660tFSlpaXu6eLi4gt9+wEAAADArcbuyUtM\nTJTT6dTEiRP1ySefKCMjQ8uXL9fatWv1ww8/KCIiQtHR0VWWvKioKHfBk6Tw8HD3GbB9+/bp1KlT\nuummm9zLmzRpopiYGPf0bbfdppYtW6p169bq27ev+vbtq0GDBql+/frudbp16yabzeae7t69u2bN\nmqXy8nJ9/vnnKi8vV5s2bTzGVVpaquDgYEnS9u3b9dlnn3lcgulyuVRRUaF//vOf2rNnj7y9vdWl\nSxf38tjY2HM+STQjI0Pp6emV5jdoIPn5nXXTGtG7d+1nnMnkA1G9Dd9xuuAas/eapulHY1lFfzIW\nJUlKTjabd8bV3bXO9PdcVJTZvLAwc1lJSeayJOmMOxCM6NbNXFZAgLksSVq50mze4cPmst5+21yW\nZP5nSna22TyThg83m5efbzZv82ZzWaY/J2/s+JXZwDFjjEUV/3hx/96rsX8GOxwOLVq0SNu3b5eP\nj49iY2PlcDjkdDp15MgRJSYmVrutj4+Px7TNZlNFRcV5Zzds2FBbt26V0+nUBx98oGnTpiktLU2b\nNm06r1/XUFJSIi8vL23ZskVeXl4eywL++zdfSUmJHnnkEY0bN67S9i1atLjoJ4ZOnTpVqamp7uni\n4mJFRkZe1L4AAAAAoMZK3s/35c2ePdtd6BwOh2bOnKkjR45o4sSJF7Xfa6+9Vj4+PsrLy1OLFi0k\nSUeOHNGePXs8iqO3t7d69+6t3r17a/r06QoKCtJHH32ku+++W5KUl5fnsd8NGzYoOjpaXl5eio+P\nV3l5uQoLC5WQkFDlODp37qydO3fquuuuq3J5bGysTp8+rS1btrgv19y9e7eOHj161uOz2+2y2+3n\n92YAAAAAwDnU2O/Ja9y4seLi4rR06VL3A1Z69eqlrVu3VipkFyIgIECjR4/W5MmT9dFHH2nHjh1K\nSkpSvXr/G3p2drZefvll5efn61//+pf++Mc/qqKiwuOSzoKCAqWmpmr37t36y1/+oldeeUXjx4+X\nJLVp00b333+/Ro4cqRUrVuif//ynNm7cqIyMDL3//vuSpCeffFKffvqpxo4dq/z8fH311Vf629/+\n5n7wSkxMjPr27atHHnlEeXl52rJli5KTk/l1EQAAAACMqtG7lhITE5Wfn+8ueU2aNFG7du106NAh\nj8J1oV588UWVlJRo4MCBatiwoSZOnKiioiL38qCgIK1YsUJpaWk6efKkoqOj9Ze//EXXX3+9e52R\nI0fqxx9/1I033igvLy+NHz9eDz/8sHt5ZmamZsyYoYkTJ+qbb75RSEiIunXrpgEDBkiS4uLilJub\nq6eeekoJCQlyuVy69tprNXToUI99JCcnKzExUc2aNdOMGTP0zDPPXPRxAwAAAMCFsrnO/GVxFuVw\nONSpUyfNmTOnrodyTsXFxQoMDFR6epH8/BrVep7JG/slsw+BMP/gFdu5V6pBJh+8MmGCgacAnSE2\n1mgcD16pQTx4peZY+cErph+uZOUHr5j+eWnygRqmj61vX7N5Vn7wyunT5rIk6z94JXDMGBUVFalR\no/PvBjV2uSYAAAAAoO5R8gAAAADAQgxf0FY3nE5nXQ8BAAAAAIzgTB4AAAAAWAglDwAAAAAshJIH\nAAAAABZCyQMAAAAAC6HkAQAAAICFUPIAAAAAwEIoeQAAAABgIZQ8AAAAALAQSh4AAAAAWAglDwAA\nAAAshJIHAAAAABZCyQMAAAAAC6HkAQAAAICF1GnJczgcSklJuSxzo6KiNGfOHPe0zWbTypUra3to\nAAAAAHBJvOt6AHVhxYoV8vHxuaBtDh48qMaNG0uS9u/fr1atWmnbtm3q1KlTbQwRAAAAAC7KVVny\nmjRpcsHbhIWF1cJIAAAAAKBm1fk9eRUVFXriiSfUpEkThYWFKS0tTdJPZ8tsNpvy8/Pd6x49elQ2\nm01Op1OS5HQ6ZbPZ9I9//EPx8fHy9/fXLbfcosLCQq1atUpt27ZVo0aNdN999+nEiRPu/fzycs3C\nwkINHDhQ/v7+atWqlZYuXVppnGdertmqVStJUnx8vGw2mxwOhz7++GP5+Pjo22+/9dguJSVFCQkJ\n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\nfGOfwfSDV0w+LCQszFyWJK1dazbP5EMZTD84yvQDJ0w+UMPqD14x+ZAe0w9Csf6DV8zmmWT6QVxm\nH7xSrJdfDlRRUdEF3dZl+ONcd/7whz/otttuU4MGDbRq1SotXrz4gi4dPR8VFRU6fPiwZs2apaCg\nIP3617+u0f0DAAAAwLlcNSVv48aN+v3vf69jx46pdevWevnll5WcnFyjGQUFBWrVqpWaN2+urKws\neZv+LyEAAAAAV72rpoUsX7681jOioqJ0lV79CgAAAOAycVEPXgEAAAAAXJ4oeQAAAABgIZQ8AAAA\nALAQSh4AAAAAWAglDwAAAAAshJIHAAAAABZCyQMAAAAAC6HkAQAAAICFUPIAAAAAwEIoeQAAAABg\nIZQ8AAAAALAQSh4AAAAAWAglDwAAAAAs5IopeQ6HQykpKRe9fVpamjp16uSeTkpK0l133VWrmQAA\nAABgmnddD6CuzJ07Vy6Xq66HAQAAAAA16qoteYGBgXU9BAAAAACocVfM5ZqSVFFRoSeeeEJNmjRR\nWFiY0tLS3MsKCgp05513KiAgQI0aNdKQIUN06NChavf1y8s1jx8/rpEjRyogIEDh4eGaNWtWpW2W\nLFmirl27qmHDhgoLC9N9992nwsJCSZLL5dJ1112nP/zhDx7b5Ofny2azae/evZd49AAAAABwblfU\nmbzFixcrNTVVeXl5Wr9+vZKSktSjRw/deuut7oKXm5ur06dP67HHHtPQoUPldDrPa9+TJ09Wbm6u\n/va3v6lp06b67W9/q61bt3rcx1dWVqbnnntOMTExKiwsVGpqqpKSkvT3v/9dNptNo0aNUmZmpiZN\nmuTeJjMzU7169dJ1111XZW5paalKS0vd00VFRT/Nv4j35+IcM5YkST/+6Gcsq7zcWJQk6eRJs3ml\n5j4klj42yezxmb5K/NQps3km38sTJ8xlSdZ+L618bJLkbfBfO6Y/lz/+aDavrMxclumflxUVZvNM\n/11n8s/ONNM/w0z+2ZWWFkvShd9m5rpCJCYmunr27Okx74YbbnA9+eSTrg8++MDl5eXlKigocC/7\n4osvXJJcGzdudLlcLtf06dNdHTt2dC9/4IEHXHfeeafL5XK5jh075vL19XUtX77cvfz77793+fv7\nu8aPH1/tmDZt2uSS5Dp27JjL5XK5vvnmG5eXl5crLy/P5XK5XKdOnXKFhIS4srKyqt3H9OnTXZJ4\n8eLFixcvXrx48eLFq8rXgQMHzrc2uVwul+uKOpMXFxfnMR0eHq7CwkLt2rVLkZGRioyMdC9r166d\ngoKCtGvXLt1www1n3e++fft06tQp3XTTTe55TZo0UUxMjMd6W7ZsUVpamrZv364jR46o4r//5VNQ\nUKB27dopIiJC/fv316JFi3TjjTfqvffeU2lpqQYPHlxt9tSpU5WamuqePnr0qFq2bKmCgoJav2+w\nuLhYkZGROnDggBo1alSrWVbPs/Kxmc6z8rFZPc/Kx2Y6z8rHZjrPysdmOs/Kx2Y6z8rHZjrPyscm\nSS6XS8eOHVNERMQFbXdFlTwfHx+PaZvN5i5ate348ePq06eP+vTpo6VLlyo0NFQFBQXq06ePTp1x\njjg5OVkjRozQ7NmzlZmZqaFDh6p+/frV7tdut8tut1eaHxgYaOSDI0mNGjUylmX1PCsfm+k8Kx+b\n1fOsfGym86x8bKbzrHxspvOsfGym86x8bKbzrHxsF3Pi54p68Ep12rZtqwMHDujAgQPueTt37tTR\no0fVrl27c25/7bXXysfHR3l5ee55R44c0Z49e9zTX375pb7//nvNnDlTCQkJio2NdT905Uz9+vVT\ngwYNNH/+fOXk5GjUqFGXeHQAAAAAcP4sUfJ69+6tDh066P7779fWrVu1ceNGjRw5UomJierates5\ntw8ICNDo0aM1efJkffTRR9qxY4eSkpJUr97/3p4WLVrI19dXr7zyir7++mu9++67eu655yrty8vL\nS0lJSZo6daqio6PVvXv3Gj1WAAAAADgbr7Qzfw/BZSwrK0thYWHq27eve96yZcvk5+enQYMGqV+/\nflqzZo2mTZv2/9u776iorvZtwPcMvYMCikakKIgFxApRBBtWLMRuBAv6WgLGrjGiYI1GrIkmLyLY\ne31V1KCAYMGCIAqCFLGAogQVEBXY3x/+Zj6GwZKwZ4byXGvNWnpm1rnPMOXMPnvvZ2Pnzp1o3749\ngoKCoK2tDQAIDw9HUlISJk+eDAA4duwYioqKMGLECACAi4sL7ty5A19fX+zfvx8jRoxAfn6+OFNL\nSwtNmjTBpk2b8MsvvyA1NRVLly7F3r17MXnyZNSvX198XObm5li3bh3mzp2LTp06/ePnqqSkBBcX\nFyjLoRyYPLNqel5Nfm7yzqvJz62m59Xk5ybvvJr83OSdV5Ofm7zzavJzk3deTX5u8s6ryc/t3xIw\nJu8CtTXfpUuX0L17dzx69Aj16tVT9OEQQgghhBBCahFq5HH07t075OTkwNPTE/Xr18fu3bsVfUiE\nEEIIIYSQWqZGzMmrKvbu3YvGjRsjLy8Pq1evVvThEEIIIYQQQmoh6skjhBBCCCGEkBqEevIIIYQQ\nQgghpAahRh4hRAJjDJmZmSgqKlL0oZAqjN4nhBBCSNVFwzVrme3bt2P48OHQ1NRU9KHI3KNHjwAA\njRo1UvCRVC+lpaVQV1fH3bt30bRpU0UfDncfPnxA7969sXXr1hr5/OSlpr9PACAvLw8xMTF4/vw5\nSktLJe7z8PCo9P5PnDjx1Y8dMGBApfOqgufPn+P+/fsAAGtraxgbG8skZ/z48diwYQN0dHQkthcU\nFMDb2xtBQUEyySX8FBUVQV1dXdGHQb6ShYUFrl+/jrp160psz8vLQ5s2bZCWlqagI6u9qJFXBaSl\npcHCwkIuWfXq1cPbt28xdOhQTJgwAd9++61M80pKSnD06FEkJiYCAGxsbDBo0CCZrStSXFwMPz8/\nbNy4Efn5+QA+Lnbv7e2NxYsXQ0VFRSa5srJx48avfqyPjw+33BYtWmDbtm1wcHDgts/yXr9+/dWP\n1dXV5ZptZGSEy5cv18jGSXFxMfbs2YNevXrJfAkXebxPyrt48SK6du0q85yTJ09i9OjRyM/Ph66u\nLgQCgfg+gUCA3NzcSmcIhV83mEYgEKCkpKTSeWXZ29tLPKeyWerq6mjSpAnGjh3L7W/95s0bTJ06\nFfv27RM/FyUlJQwfPhy//fYb9PT0uOSIKCkpISsrS6oR+eLFC9SvXx/FxcVc85YtW4bRo0fD3Nyc\n635rm9LSUixfvhxbt27Fs2fPkJycDAsLCyxatAhmZmaYMGFCpTMUdV4FgK5du1b4uRO5cOFCpfZ/\n4sQJ9OnTByoqKl+8iMT7wpFQKER2drbUZ+7Zs2cwNTXFu3fvKp2hyAtj/v7+mD17tlQnydu3b7Fm\nzRr4+vpyzeOBGnlVgFAohLOzMyZMmIAhQ4bI9MpVcXExTp48ieDgYJw5cwYWFhYYN26ceNkHnu7e\nvYsBAwYgOzsb1tbWAIDk5GQYGRnh5MmTaNmyJdc8AJgyZQqOHDkCf39/ODo6AgCuXLmCJUuWYNCg\nQdiyZQvXPNHrNnToUGhoaHDdNwCpHww5OTkoLCyEvr4+gI9XyDQ1NWFsbMz1KtnJkyexevVqbNmy\nRSavE/Dxff+5kx3wcUigLH7gzpgxA2pqali1ahXX/X6OPC94aGpqIjExEY0bN+a+77Lk8T4pT01N\nDd988434e0tWPfVWVlbo27cvVqxYUSNHPvz000/4/fff0apVK3To0AEAcP36dcTHx2Ps2LG4d+8e\nwsLCcOTIEQwcOLDSecOHD0dsbCw2bdok8d08ffp0tG7dGvv27at0BvDx4hFjDAYGBkhJSYGRkZH4\nvpKSEpw8eRLz58/H06dPueSJ2NnZISEhAR07dsT333+PYcOGwdDQkGtGWd999x0cHBwwZ84cie2r\nV6/G9evXcfDgQe6ZYWFhCAsLq7Bnm1fPqL+/P0JCQuDv74+JEyciISEBFhYW2L9/P9avX48rV65U\nOkNR51Xg47mnrA8fPuD27dtISEiAp6cnNmzYUKn9l21ofe4iEs/zqqjhNWjQIISEhEhcsCkpKUFY\nWBjOnz8v7sGvjPLPSSAQoGwzpuxvCt6/Gz514ejly5cwNjbmnscFIwoXGxvLfHx8mJGREdPT02OT\nJk1i165dk3ludnY2+/XXX1mrVq2YiooKc3NzY8eOHWMlJSVc9u/g4MDc3NxYbm6ueFtubi4bMGAA\nc3R05JJRnq6uLjt9+rTU9lOnTjFdXV3uedOnT2dGRkZMV1eXeXl5sStXrnDPENm9ezfr1KkTS0pK\nEm9LSkpiTk5ObNeuXVyz9PX1maqqKhMKhUxdXZ0ZGBhI3HgIDw//6htvP/zwA9PV1WVt27ZlkyZN\nYjNmzJC48ZaQkMAsLCyYpqYms7e3Z/b29kxLS4uZmZmxO3fucM9zdnZmx44d477f8uTxPikvJyeH\nBQQEMDs7O6asrMxcXV3Z/v372bt377jmaGpqstTUVK77rEr+85//MH9/f6ntS5cuZV5eXowxxnx9\nfVnbtm255GlqarJLly5JbY+MjGSamppcMhhjTCAQMKFQ+MmbkpISW7ZsGbe8shISEtiCBQuYubk5\nU1FRYX379mW7d+9mBQUF3LMMDQ1ZQkKC1Pb4+HhmbGzMPW/JkiVMKBSyDh06sIEDB7JBgwZJ3Hix\ntLRkf/31F2OMMW1tbfFnMDExkenr63PLEZHnefVzFi9ezGbNmiW3PJ4EAoH4cyf6t+imqqrKrKys\n2MmTJ7nnnj9/nrVp04aFhoayV69esVevXrHQ0FDWrl07du7cOe55AoGAPX/+XGp7WFgYMzQ05J7H\nA/XkVSHFxcU4ceIEgoODERoaCisrK4wfPx5jxoyRuBrJ07Vr1xAUFISQkBCYmJjg779xqDcSAAAg\nAElEQVT/hoGBAbZv3w4XF5dK7VtDQwM3btxAixYtJLYnJCSgffv2ePv2baX2XxFjY2NERETAxsZG\nYntiYiK6dOmCnJwc7pmi1y0kJARnzpxBkyZNxK8bz+FylpaWOHToEOzt7SW237x5E0OGDEF6ejq3\nrJCQkM/e7+npyS1LET43BE0gEFR6yEx5jo6OMDIyQkhICAwMDAAAf//9N8aOHYucnBxcvnyZa96B\nAwewYMECzJgxA23btoWWlpbE/ba2tlxyFP0+uXXrFrZv3469e/cCAEaNGoUJEybAzs6u0vt2d3fH\niBEjMGzYsErv62v4+/t/9n7eQ4H09fVx48YNNGnSRGL7gwcP0LZtW7x69QpJSUlo37493rx5U+k8\nU1NTnDp1Cq1atZLYHh8fj759++Lx48eVzgCAiIgIMMbQrVs3HD58GHXq1BHfp6qqisaNG6NBgwZc\nsj4nOjoae/bswcGDB1FUVPSPhqd/DQ0NDdy+fVs8SkYkKSkJ9vb23M+vJiYmWL16NcaMGcN1v+Vp\naGggKSkJjRs3ho6ODuLi4mBhYYF79+6hQ4cO4mkYvMjzvPo5Dx48QIcOHbgMAwcUM/fc3Nwc169f\nl2kPdlktW7bE1q1b0blzZ4ntly5dwqRJk8SjZirLwMAAAoEAr169khq6X1JSgvz8fEyePBm//fYb\nlzyuFNzIJBUoKipiAQEBTE1NjQkEAqampsbGjBnDnj59ymX/2dnZbM2aNax58+ZMXV2djRgxgp0/\nf54xxlh+fj6bO3cuMzU1rXSOra0tCwsLk9oeFhbGWrZsWen9V8TPz4+NHDmSFRUVibcVFRWx0aNH\nsyVLlsgks6xnz56xpUuXMnV1daaiosIGDhxY4d/g39DQ0GAxMTFS269du8Y0NDS4ZMhTXFzcV9+q\nO3V19Qqvut+5c4epq6tzzyt/NbXsVVahUMg9T5GePHnCFi9ezNTU1JiWlhZTUlJinTt3rvDv/U8E\nBgYyU1NTtnjxYnbo0CF2/PhxiRtvrVu3lri1aNGCaWpqMl1dXWZvb889z9jYmIWEhEhtDwkJEfcE\n3b17l9sV6j/++IP16NGDZWVlibdlZWUxV1dXtnXrVi4ZZWVkZLDS0lLu+/1asbGxbNasWaxhw4Yy\n+Yy3b9+e+fn5SW1fvHgxa9OmDfe8OnXqsAcPHnDfb3lt2rRhO3fuZIxJ9uT5+fmxzp07c8+rKufV\nHTt2MBMTE677NDQ0ZMnJyVz3WZWoq6tXOBImLi6O62cuODiYbd++nQkEArZhwwYWHBwsvu3Zs4dd\nvnyZWxZv1MirQq5fv86mTJnCDAwM2DfffMMWLlzI0tLSWGRkJOvevTtr3759pTP69+/PVFRUWIsW\nLdi6devYy5cvpR7z7NkzJhAIKp116tQp1qJFC3bw4EH26NEj9ujRI3bw4EHWqlUrdurUKXH3+qtX\nryqdJTJo0CCmo6PDDA0NWffu3Vn37t2ZoaEh09XVZYMHD5a48Xbt2jU2efJkpq+vz0xNTZmvry+b\nMGEC09DQ4DIMo3///sze3p7dvHlTvO3GjRusTZs2zM3NrdL7L+/Bgwds4cKFbMSIEezZs2eMMcZO\nnz5d6R/PIp8a3lFR40RWUlJSWGhoKCssLGSMMZn9KJT3BY+MjIzP3ngqLi5mBw8eZP7+/szf358d\nOnSIffjwgWtGee/fv2cHDx5kffr0YcrKyszBwYH997//Zfn5+Sw9PZ2NHj2a2djYVCpDUe/Jsl69\nesUGDx7MduzYwX3fS5cuZRoaGszHx4ft3LmT7dy5k/n4+DBNTU3xcMaAgADWo0cPLnmtW7dm2tra\nTEVFhVlaWjJLS0umoqLCtLW1xUOYRTcegoKC2IEDB6S2HzhwgAUHB3PJKC8tLY0tW7aMNW/enCkp\nKbFu3bqxwMBAlpeXxz3rxIkTTFlZmXl4eIh/cI4ZM4YpKyuzo0ePcs+bO3duhcN7eTt27BjT09Nj\nq1atYpqammzNmjXMy8uLqaqqymQInrzPq+V/hwwaNIh17NiRKSkpcb8Q/eOPP7J58+Zx3eeX5Ofn\ns1OnTrEtW7awDRs2SNx4c3JyYj179mTZ2dnibdnZ2czV1ZV16dKFe154eDh7//499/3KEg3XrAIC\nAgKwfft23L9/H3379oWXlxf69u0rMcH08ePHMDMzq3RFsAkTJsDLy0s88b0i7P/Wv6ps0Yayxy/q\n3ha93cr+n+cE4HHjxn31Y7dv317pvOfPn2Pnzp3Yvn07UlJS4ObmBi8vL/Tq1Uv8HKOiotC7d+9K\nDzPJycmBp6cnQkNDxVVCi4uL0atXLwQHB3MtRR4REYE+ffqgU6dOiIyMRGJiIiwsLLBq1SrcuHED\nhw4dqnTGw4cPv/qxvAuIvHz5EsOGDcPFixchEAiQkpICCwsLjB8/HgYGBli7dm2lM8oOz4qKisLc\nuXOxZMkScSXKq1evwt/fH6tWrULfvn0rnacIiiiu5O3tjb1794IxhjFjxsDLy0sqJzs7Gw0aNJAq\nDlEd3blzB25ubsjIyOC+7927d2Pz5s0SSxp4e3tj1KhRAD5WjRNV26wsPz+/r37s4sWLK51nZWWF\nwMBAdOnSRWJ7REQEJk2axKUIRFkODg64fv06bG1tMXr0aIwcORINGzbkmlHeqVOnsGLFCty+fRsa\nGhqwtbXF4sWL4ezszD1r+vTp2LFjB2xtbWFraytVqTogIIBb1qVLl+Dv74+4uDjk5+ejTZs28PX1\nhaurK7cMEXmeVwHp3yhCoRBGRkbo1q0b9+fn7e2NHTt2oGnTphUO2+f5mgFAbGws+vbti8LCQhQU\nFKBOnTp48eKFzIrYPHjwAIMHD0ZycrK4ANejR4/QtGlTHDt2TGooOg+lpaV48OBBhcWHyn/XVAXU\nyKsCmjZtivHjx2Ps2LEwMTGp8DHv37/H3r17q9VcqIiIiK9+rCxOSvKgqqoKS0tL8etX0dzJ169f\nY+DAgbh48SKXzOTkZCQlJQEAmjVrBisrKy77LcvR0RFDhw7FzJkzJeZFxMTEwN3dndv8GUXx8PDA\n8+fPERgYCBsbG/HzO3v2LGbOnIm7d+9WOqN89dCKLnCI/i+rqlz37t1DZmYm3r9/L7GdV2lpec81\nBIDu3bvDy8sL7u7uUFNTq/AxxcXFiI6OrrbfK2VFRUXBzc0Nf//9t6IPpVpRV1dHUlISzMzMJLZn\nZGTAxsaG+5y1hQsXYvTo0WjevDnX/VYV8p7HLG/yOK/KQ3x8PFq2bAmhUCj318zFxQVWVlbYunUr\n9PT0EBcXBxUVFXz//feYPn063N3dueYBH8+j58+fF792NjY26NGjxxcrd/8bV69exahRo/Dw4UOU\nbzrJ8jxeGdTIq4UKCgoQERFR4Y8/3mvC1HSXLl2Ck5OTXDPfv3+P9PR0WFpaymy9QW1tbdy5cwfm\n5uYSjbyMjAw0a9YMRUVFMsmVdaNEpH79+jh79izs7Owknl9aWhpsbW25TO5X5EWOtLQ0DB48GHfu\n3JEoMS068fE6GSmiuJK8yLsQSvm1uxhjyMrKws6dO+Hs7Iw9e/ZwzVOEvLw8HDp0CKmpqZgzZw7q\n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\nLZm5ubnEjReBQMCePXsm/n/Z100eMjMzmZ+fHzM3N2cNGzZkb968kVlWUlISm9YusUYAABuLSURB\nVDNnDqtfvz5TV1dnbm5u3DOKiorYnj17WI8ePZimpiYbOnQoCw0NZaWlpdyzaiolJSU2Y8YMqfOA\nsrIyu3v3Lvc8U1NTFhERwRhj7N27d0xDQ4P99ddf4vvj4+OZgYEB18y0tDTWu3dvJhQKmUAgYAKB\ngAmFQtarVy+WkpLCNausJ0+eMC8vL6aiosL69+/P7ty5wz2jXr16n11Y+tatW6xevXrcc3V0dMSL\nr8vS2LFj2atXr2SeI7JgwQLm6OjI1NXVmb29Pfvxxx/ZsWPHJH6P8STv51eTmZiYsOPHj0ttP3bs\nGGvQoAH3vE6dOrHevXuz58+fi7c9f/6c9e7dmzk5OTHGGDt//jyzsrLinv1vUSOvCmjQoAFLSEiQ\n2n7nzh1mYmLCNatevXps+/btUtu3b9/OjI2NuWbVBrt372adOnViSUlJ4m1JSUnMycmJ7dq1i2tW\nw4YNWXR0NGNMsrFw5MgRZmFhwTVLU1OTXbp0ies+q5IRI0YwExMTNnfuXLZu3Tq2fv16iRsvQqFQ\n4oSgra0tbqjLStmGkLq6OhsyZAg7deoUKykpkWmuSHFxMTt69KhMGnllZWRksCVLljALCwtmamoq\n0wZsTXLlyhXm5eXFdHR0WIcOHdimTZtYTk6OzBp5kydPZo6OjiwyMpLNnDmT1a1bl7179058/65d\nu1i7du245zL28WLptWvX2LVr19jLly9lksEYY3l5eWzu3LlMQ0ND/FxlRUVFhT19+vST9z958oSp\nqqpyzx03bhwLDAzkvl9FEwgEzNjYmK1cuZLdv39f0YdD/gE1NbUKX7OkpCSmrq7OPS8pKYlZW1sz\nVVVVZmlpySwtLZmqqipr1qyZ+DiOHj3KduzYwT3736LCK1XA69evkZOTI7U9JyeH2xAWkR9//BFT\npkzBrVu3xBNHr127hqCgICxatIhrlsiDBw+QmpqKLl26QEND45MTj3nZuXMntm7divT0dFy5cgWN\nGzfG+vXrYW5ujoEDB3LNWrRoEQ4dOiRR6MXa2hrr1q3DkCFDMHr0aG5ZI0aMwLx583Dw4EEIBAKU\nlpYiOjoas2fP5j7/olGjRjKfr6ZIZ86cwalTp8RDPGSFMYaxY8eKKwcWFRVh8uTJ0NLSkngcr+F+\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11964fac8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
>>>>>>> 04fc47c7ed4fa7e571c13ede265667dc29f259f4
   "source": [
    "sns.reset_defaults()\n",
    "plt.figure(figsize= (10,10))\n",
    "cor_matrix = np.corrcoef(np.array(train[x]).T)\n",
    "plt.pcolor(cor_matrix, cmap = 'seismic', linewidth = 1)\n",
    "plt.xticks(range(28), names, rotation = 'vertical')\n",
    "plt.yticks(range(28), names, rotation = 'horizontal')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "your answers here"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part (d): Subset Selection\n",
    "\n",
    "Apply either one of the following subset selection methods discussed in class to choose a minimal subset of predictors that are related to the response variable:\n",
    "- Step-wise forward selection\n",
    "- Step-wise backward selection\n",
    "\n",
    "We require you to implement both these methods *from scratch*. You may use the Bayesian Information Criterion (BIC) to choose the subset size in each method. Do these methods eliminate one or more of the redundant predictors (if any) identified in Part (c)? In each case, fit linear regression models using the identified subset of predictors to the training set. How do the test $R^2$ scores for the fitted models compare with the model fitted in Part (b) using all predictors?\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Jul', 'Aug', 'winter', 'light', 'summer', 'windspeed', 'humidity', 'fall', 'temp', 'Jun']\n"
     ]
    }
   ],
   "source": [
    "# test.head(200)\n",
    "\n",
    "regression_model = LinearRegression(fit_intercept=True)\n",
    "\n",
    "\n",
    "all_predictors = x\n",
    "\n",
    "def get_bic(X_train, y_train):\n",
    "    X_train = add_constant(X_train)\n",
    "    model = sm.OLS(y_train, X_train).fit()\n",
    "    return model.bic\n",
    "\n",
    "\n",
    "X_train = train[all_predictors].values\n",
    "predictors = [(all_predictors, get_bic(X_train, y))]\n",
    "\n",
    "for k in range(len(all_predictors), 1, -1):\n",
    "    best_k_predictors = predictors[-1][0]\n",
    "    bics = []\n",
    "    \n",
    "    for predictor in best_k_predictors:\n",
    "        k_minus_1 = list(set(best_k_predictors) - set([predictor]))\n",
    "        X_train = train[k_minus_1].values\n",
    "\n",
    "        bics.append(get_bic(X_train, y))\n",
    "        \n",
    "    best_k_minus_1 = list(set(best_k_predictors) - set([best_k_predictors[np.argmin(bics)]]))\n",
    "    predictors.append((best_k_minus_1, np.min(bics)))\n",
    "    \n",
    "best_predictor_set = sorted(predictors, key=lambda t: t[1])[0]\n",
    "\n",
    "print(best_predictor_set[0])\n",
    "\n",
    "# X_train = train[best_predictor_set[0]].values\n",
    "# X_val = train[best_predictor_set[0]].values  \n",
    "# X_test = test[best_predictor_set[0]].values  \n",
    "# y_val = test['count']\n",
    "\n",
    "# regression_model.fit(np.vstack((X_train, X_val)), np.hstack((y, y_val)))\n",
    "\n",
    "# print('best predictor set: {}\\nvalidation R^2: {}\\ntest R^2: {}'.format(best_predictor_set[0], best_predictor_set[1], regression_model.score(X_test, y_test)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "shapes (400,11) and (10,) not aligned: 11 (dim 1) != 10 (dim 0)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-86-3cb2bc89da7b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msm\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mOLS\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0mr2_test_step\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mr2_score\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_true\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtest\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'count'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test_step\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'R^2 score on test set = %f'\u001b[0m\u001b[0;34m%\u001b[0m\u001b[0mr2_test_step\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/Users/nondracek/anaconda/envs/py3/lib/python3.6/site-packages/statsmodels/base/model.py\u001b[0m in \u001b[0;36mpredict\u001b[0;34m(self, exog, transform, *args, **kwargs)\u001b[0m\n\u001b[1;32m    790\u001b[0m             \u001b[0mexog\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0matleast_2d\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mexog\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# needed in count model shape[1]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    791\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 792\u001b[0;31m         \u001b[0mpredict_results\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparams\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    793\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    794\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mexog_index\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpredict_results\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'predicted_values'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/Users/nondracek/anaconda/envs/py3/lib/python3.6/site-packages/statsmodels/regression/linear_model.py\u001b[0m in \u001b[0;36mpredict\u001b[0;34m(self, params, exog)\u001b[0m\n\u001b[1;32m    259\u001b[0m             \u001b[0mexog\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexog\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    260\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 261\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mexog\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    262\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    263\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mget_distribution\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mscale\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexog\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdist_class\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mValueError\u001b[0m: shapes (400,11) and (10,) not aligned: 11 (dim 1) != 10 (dim 0)"
     ]
    }
   ],
   "source": [
    "X_test_step = test[best_predictor_set[0]]\n",
    "X = train[best_predictor_set[0]]\n",
    "X_test_step = sm.add_constant(X_test_step)\n",
    "\n",
    "model = sm.OLS(y, X).fit()\n",
    "\n",
    "r2_test_step = r2_score(y_true=test['count'], y_pred= model.predict(X_test_step))\n",
    "print('R^2 score on test set = %f'%r2_test_step)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "your answers here"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part (e): Cross Validation\n",
    "\n",
    "- Perform a 10-fold cross-validation procedure to select between the 3 competing models you have so far: the model with the best BIC from Step-wise forward selection, the model with the best BIC from Step-wise backward selection (if it is different), and the model with all possible predictors.  Report the average $R^2$ across all 10 validation sets for each model and compare the results.  Why do you think this is the case?\n",
    "- Evaluate each of the 3 models on the provided left out test set by calculating $R^2$.  Do the results agree with the cross-validation?  Why or why not?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 373,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.34257855093958389"
      ]
     },
     "execution_count": 373,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "kf = KFold(n_splits=10)\n",
    "r2_all_pred = []\n",
    "for train_index, test_index in kf.split(train):\n",
    "    train_set = train.loc[train_index]\n",
    "    test_set = train.loc[test_index]\n",
    "    y = train_set['count']\n",
    "    x = list(train_set.columns)\n",
    "    x.remove('count')\n",
    "    X = train_set[x]\n",
    "    X = sm.add_constant(X)\n",
    "    X_test = test_set[x]\n",
    "    X_test = sm.add_constant(X_test)\n",
    "    model = sm.OLS(y, X).fit()\n",
    "    r2 = r2_score(y_true=test_set['count'], y_pred=model.predict(X_test))\n",
    "    r2_all_pred.append(r2)\n",
    "\n",
    "np.mean(r2_all_pred)\n",
    "    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
